%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(r) 6.0%%For: (Louis Moresi) (Slave)%%Title: (carts.eps)%%CreationDate: (30/7/1999) (12:38 pm)%%BoundingBox: 36 458 504 730%%HiResBoundingBox: 36.7937 458.5159 503.2656 729.3672%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Times-Bold%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_blend_AI5 1.0 0%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 2.0%AI3_ColorUsage: Color%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()%AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: -378 936 -1.5 826 581 58 0 1 2 40%AI5_OpenViewLayers: 7%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 %%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 23 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			5 packedarray		} bind def		/setcustomcolor		{			exch aload pop pop			4			{				4 index mul 4 1 roll			} repeat			5 -1 roll pop			setcmykcolor		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_screens_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)%%Version: 1.2 0%%CreationDate: (03/24/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackingsystemdict beginuserdict /Adobe_screens_AI5 13 dict dup beginput/initialize{	Adobe_screens_AI5 begin	/screenid		deviceDPI 600 gt composite? not or		{		-1		}		{			deviceDPI currentScreenFreq 			dup dup 60 ge exch 150 le and deviceDPI 300 le and		{			pop 60		} if		div 1.41421 div 0.5 add cvi		} ifelse	def		2 screenid eq	{		/customsize 16 def		/customdata /customdata2 def		setcustomscreen	} if		3 screenid eq	{		/customsize 24 def		/customdata /customdata3 def		setcustomscreen	} if		4 screenid eq	{		/customsize 16 def		/customdata /customdata4 def		setcustomscreen	} if		5 screenid eq	{		/customsize 20 def		/customdata /customdata5 def		setcustomscreen	} if		6 screenid eq	{		/customsize 24 def		/customdata /customdata6 def		setcustomscreen	} if		7 screenid eq	{		/customsize 28 def		/customdata /customdata7 def		setcustomscreen	} if		8 screenid eq	{		/customsize 16 def		/customdata /customdata8 def		setcustomscreen	} if} def/terminate{	currentdict Adobe_screens_AI5 eq	{	 end	} if} def/setcustomscreen{	deviceDPI customsize div 0	{		1 add 2 div customsize mul cvi exch		1 add 2 div customsize mul cvi exch		customsize mul add		customdata load exch get 256 div	} setscreen} def/customdata2 28 28 mul string defcurrentfile customdata2 readhexstring4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECDF3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD044483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CFF0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata3 28 28 mul string defcurrentfile customdata3 readhexstring011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F688AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A125998DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A479336B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A177306989C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A115897DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A336C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB4800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata4 28 28 mul string defcurrentfile customdata4 readhexstring1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A32C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4CC38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata5 28 28 mul string defcurrentfile customdata5 readhexstring010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B112654A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A9937047334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E092351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B07204EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C29E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9FDAF3E2BA681C07214FA0DBF5E1B8671A000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata6 28 28 mul string defcurrentfile customdata6 readhexstring081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A8190ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BDE4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B04071943B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B4864798091AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BEE4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A03061842B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC452280100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata7 28 28 mul string defcurrentfile customdata7 readhexstring01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F05122953A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D73372318253A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CEECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D33161E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E4350657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C220D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F64798499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F360E04112952A5CFEDFAF0DBB25E350Epop pop/customdata8 28 28 mul string defcurrentfile customdata8 readhexstring050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F132939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634BB8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADAF0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFCFFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB96775131210B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop popendenddefaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginResource: procset Adobe_blend_AI5 1.4 0%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)%%Version: 1.4 0%%CreationDate: (11/19/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_blend_AI5 70 dict dup beginput/bd{	bind def} bind def/xs{	exch store} bd/nullProc{	{	}} def/initialize{	pop pop	Adobe_blend_AI5 begin		Adobe_blend_AI5_vars begin			/_contoneDevice where			{				pop			}			{				/_contoneDevice false def				} ifelse								/_dpiThreshold where			{				pop			}			{					/_dpiThreshold 600 def			} ifelse						/_screenFreqThreshold where			{				pop			}			{					/_screenFreqThreshold 150 def			} ifelse						/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def	/invertXfer	{		[		{			1 exch sub				} /exec load systemdict/currenttransfer get exec /exec load				] cvx systemdict/settransfer get exec			} bd			/spotDict 3 dict dup begin				/nSpots 2 def				/spot1 7 dict def				/spot2 7 dict def		 end			def			composite?			{				/_setgray_ /setgray load def				/_fill_ /fill load def				/_image_ /image load def			}			{				/_setgray_ systemdict/setgray get def				/_fill_ systemdict/fill get def				/_image_ systemdict/image get def			} ifelse		} bd		/terminate		{			currentdict Adobe_blend_AI5_vars eq			{		 end			currentdict Adobe_blend_AI5 eq			{		 end		} if	} if} bd/_compositeSpotDevice where{ begin		_compositeSpotDevice 0 ne {userdict /composite? true put} if end}{	/_compositeSpotDevice 0 def	} ifelse	/nullString () def/d255 256 array def0 1 255{	d255 exch dup 255 div put} bind for/d255- 256 array def0 1 255{	d255- exch 1 d255 2 index get sub put} bind for/dUserSpace matrix defaultmatrix defcurrentdict /Adobe_blend_AI5_vars 89 dict dup beginput{	/f /F /s /S /b /B}{	null def} bind forall/byte 1 string def/sSave null def/setSSave{	save /sSave exch store} bind def/Bm null def/doBlend null def/startC? false def/endC? false def/fCMYK? null def/startTint 0 def/endTint 0 def/bSMatrix matrix def/bUMatrix matrix def/dMatrix matrix def/inLine? true def/pTState? false def/bHi? false def/yHi 0 def/xHi 0 def/noImg /lv1Fix where{	pop lv1Fix}{	false} ifelsedef/ccAry1 5 array def/ccTint 0 def/spotColor? false def/colorimage? true def[/tint1Data/tint2Data/spotDict/bAxis/ubAxis/pChange/optimize?/nSamples/sInc/blendProc/_bn/xBCInc/yBCInc/bInc/bRender/cBName/cBType/nColors/color?/blend?/colorType/cData/cDataLen/bDataLen/rampPoint/midPoint/endPoint/blendLength/blackData/yeData/mgData/cyData/cnt1/ndx/_fill/tmpcounttomark{	null def} bindrepeatpopcurrentdictendcurrentdictendexchbeginbegin/unitSq{	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath} bd/gMark{	counttomark 2 add -1 roll} bd/setCustomColor{	dup /ccTint exch store	1 exch sub 6 1 roll	ccAry1 astore	exch setcustomcolor} bd/currentCustomColor{	ccAry1 aload pop ccTint} bd/nsetcustomcolor where {	pop}{	/nsetcustomcolor	{		pop setcmykcolor		} bd} ifelse/nsetcustomcolorend where {	pop}{	/nsetcustomcolorend	{	} bd} ifelse/setBSpace{	newpath bUMatrix astore concat unitSq} bd/setCStop{	dup 0 eq	{		pop				spotColor?			{			dup 1 exch sub /ccTint exch def			ccAry1 4 /Black put			} if		setgray	}	{		1 eq		{			setcmykcolor		}		{			composite? not colorType 2 lt and			{				forceCMYK			}			{				setCustomColor			} ifelse		} ifelse	} ifelse} bd/makeByte{	/tmp 0 store	255 mul cvi	8 string 8	{		dup tmp 3 index put /tmp tmp 1 add store	} repeat	exch pop} bd/setImgSpace{	cDataLen 1 8	2 index 0 0 1 0 0 dMatrix astore} bd/bwImage{	setImgSpace cData /_image_ load	{		exec	} stopped	{		$error /errorname get /undefinedresult ne		{			stop		}		{			pop pop pop pop pop		} ifelse	} if} bdlevel2?{	/bFill	{		_fill	} def	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		expandCMYK		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd} if/expandOne{			dup type /stringtype ne			{				cDataLen string				exch				dup 0 ne				{					255 mul cvi					0 1 cDataLen 1 sub					{						3 copy						exch put pop					} for				} if				pop			} if} bd/expandSpot{	spotColor?	{		spotDict begin			spot1 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end			spot2 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end	 end	} if} bd/expandCMYK{	4	{		expandOne 4 1 roll	} repeat} bd/colorimage where dup{	exch pop		/ncolorimage where	{		pop	}	{		/ncolorimage {pop colorimage} bd	} ifelse} ifnot{	/ncolorimage where 	{		pop	}	{		/colorimage? false store		/ncolorimage		{			pop pop pop			setSSave		/blackData xs		/yeData xs		/mgData xs		/cyData xs		/cnt1 0 store		[		byte dup 0		cyData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx		}		{			.3 mul		} ifelse		mgData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx		}		{			.59 mul		} ifelse		yeData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx		}		{			.11 mul		} ifelse		blackData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx		} if		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/dup cvx 1 /gt cvx		{			pop 1		} /if cvx		255 /mul cvx /cvi cvx		256 /mod cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/put cvx		/cnt1 dup cvx 1 /add cvx /store cvx		] cvx		bind			_image_ 		sSave restore	} bd	} ifelse} iflevel2? not{	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		colorimage? 		{			expandCMYK		} if		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bwFill	{		setSSave		/cDataLen 8 store		/cData currentgray makeByte store		bwImage		sSave restore	} bd	/c1ImgFill	{		setSSave		/cDataLen 8 store		setImgSpace		spotColor?		{			spotDict begin				spot1 begin					currentCustomColor makeByte /tintImage exch def					/name exch def					/spot_K exch def					/spot_Y exch def					/spot_M exch def					/spot_C exch def			 end				spot2 initSpotData		 end		} if		currentcmykcolor		4		{			makeByte 4 1 roll		} repeat		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bFill	noImg	{		{			_fill		}	}	{		{			color?			{				c1ImgFill			}			{				bwFill			} ifelse		}	} ifelse	bd} ifcomposite?{	/bCFun	{		color?		{			cyData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			mgData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			yeData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			cData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			spotColor?			{				spotDict begin					/spotDict cvx /begin cvx					spot1 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx					spot2 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/spotDict cvx				/nsetcustomcolor cvx			}			{				/setcmykcolor cvx			} ifelse		}		{			cData /ndx cvx /get cvx			d255 /exch cvx /get cvx			/setgray cvx		} ifelse	} bd	/Bc	{		newpath		gsave		setBSpace		nColors 1 eq		{			pop pop			setCStop		} if		bFill		grestore	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			linImg		}		{			bFill		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/rdBm	{		/nColors dup load 1 sub store		_fill		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			_fill			blend? bHi? or			{				rdBlend			} if			nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/cGetRData	{		setCStop		/blend?		cData type /stringtype eq		dup not color? and		{			pop			cyData type /stringtype eq			mgData type /stringtype eq			yeData type /stringtype eq			or or		} if		store	} def	/cGetRData} if/eCStop{	mark	1 index 3 mul 3 add dup 8 gt	{		pop 8	} if	1 roll	cleartomark} bdcomposite? not{	/knockOut	level2?	{		{			0 0 0 0 setcmykcolor _fill		}	}	{		/bFill noImg		{			{				_fill			}		}		{			{				_of true eq				{					currentgray 1 ne					{						bwFill					} if				}				{					bwFill				} ifelse			}		} ifelse		def		/whiteByte 1 makeByte def		noImg		{			{				0 0 0 0 setcmykcolor _fill			}		}		{			{				cBType 0 eq				{					setSSave					/cData whiteByte store					/cDataLen 8 store					bwImage					sSave restore				}				{					_fill				} ifelse			}		} ifelse	} ifelse	bd	/bCFun	{		cData dup type /stringtype ne		{			color?			{				1 exch sub			} if		}		{			/ndx cvx /get cvx			color? customColor? not and			{				d255-			}			{				d255			} ifelse			/exch cvx /get cvx		} ifelse		/_setgray_ cvx	} bd	/eCCBlend	{		dup 3 eq		{			pop			mark 7 1 roll			6 copy ccThrough? dup /blend? xs			{				/startC? true store				setCustomColor				customColor?				{					/cData tint1Data store					setCDataLen				} if				/endC?				3 index 3 eq				{					4 index 1 ne				}				{					false				} ifelse				store			} if			cleartomark			stop		} if		1 eq		{			pop pop pop		} if		pop		/startC? false store		6		{			8 index		} repeat		ccThrough? dup /blend? xs		{			/endC? true store			blend? not			{				stop			} if			customColor?			{				/cData tint1Data store				setCDataLen			} if		} if	} bd	/handleOP	{		_of not		{			knockOut		} if	} bd	/handleROP	{		_of not		{			0 0 0 0 setcmykcolor _fill		}		{			newpath			} ifelse	} bd	/rdBm	{		/nColors dup load 1 sub store		blend? 		{			_fill		}		{			handleROP		} ifelse		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			blend?			{				cData type /stringtype ne bHi? not and				{					cData color?					{						1 exch sub					} if					_setgray_ 					_fill_ 				}				{					cData type /stringtype ne					{						/cDataLen 1 store						/bDataLen 1 store					} if					rdBlend				} ifelse			}			{								handleROP								pTState?				{					/bAxis rampPoint endPoint sub store					xHi bAxis mul yHi bAxis mul translate				} if			} ifelse							nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/ccThrough?	{		gsave		pop 0 setCustomColor		currentcmykcolor		grestore		anyColor?	} bd	/forceCMYK	{		exch pop		1 exch sub 5 1 roll		4		{			4 index mul 4 1 roll		} repeat		0		cCMYKData dup /cData ne		{			dup /yeData eq			{				pop 1 add			}			{				/mgData eq				{					2				}				{					3				} ifelse				add			} ifelse			0		} if		pop		index		0 eq		{			pop pop pop pop 0 0 0 0		} if		setcmykcolor		pop		/fCMYK? true store	} bd	/endCapSepBc	{		pop pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				colorType 1 eq				{					forceCMYK				}				{					fCMYK?					{						forceCMYK					}					{						setCustomColor					} ifelse				} ifelse			} ifelse		} ifelse		currentcmykcolor anyColor? 		blend? and		{			bFill		}		{			handleOP		} ifelse			} bd} if/cCMYKData 0 defcomposite? dup not{	pop customColor?} ifnot{	/cCMYKData	/cyData /mgData /yeData /cData	black? not	{		yellow?		{			exch		}		{			magenta?			{				3			}			{				4			} ifelse			-1 roll		} ifelse	} if	4 1 roll pop pop pop	store	/Bc	{		gsave		setBSpace		nColors 1 gt		{						blend? currentcmykcolor anyColor? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cCMYKData load dup type /stringtype eq			{				dup length /cDataLen xs				/cData xs				gsave				colorType 0 ne noImg not and				{					invertXfer				} if				linImg				grestore			}			{				pop bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/cmykGetRData	{		/fCMYK? false store		blend?		{			{				cmykDataProcs colorType get exec			} stopped			pop			blend?			{				/cData cCMYKData load store				setCDataLen			} if		} if	} def	/cmykDataProcs	[	{		pop		black? dup /blend? xs		{			setgray			0		} if		pop	}	{		cCMYKData load dup type /stringtype ne		{			0 0 0			cyan? not			{				4 magenta?				{					1				}				{					yellow?					{						2					}					{						3					} ifelse				} ifelse				roll			} if			4 copy add add add 0 eq			{				/blend? false store			} if						setcmykcolor			/startC? true store			/endC? true store			eCStop			stop		} if		pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				forceCMYK			} ifelse		} ifelse	} bind	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			black?			{				setgray			}			{				0 0 0 4 -1 roll 1 exch sub setcmykcolor			} ifelse			black?			{				/blend? true store			} if			6			{				8 index			} repeat			ccThrough?			{				/blend? true store			}			{				black?				{					/cData tint1Data store					setCDataLen				}				{					/blend? false store				} ifelse			} ifelse		}		{			mark 7 1 roll			6 copy ccThrough?			{				forceCMYK				pop				stop			} if			9 index 0 eq			{				black? dup /blend? xs				{					pop 1 setgray					/cData tint2Data store					setCDataLen					0				} if				pop			}			{				/blend?				6				{					16 index				} repeat				ccThrough?				store				blend?				{					forceCMYK				} if			} ifelse			cleartomark		} ifelse	} bind	] def	/cmykGetRData} ifcomposite? dup not{	pop isCMYKSep?} ifnot{	/endCapSepBc	{		/white? false store		pop pop		dup 0 eq		{			pop			/white? 1 index 1 eq store			setgray		}		{			1 eq			{				setcmykcolor			}			{				setCustomColor			} ifelse		} ifelse%		currentcmykcolor anyColor?		endC? or		blend? and		{			bFill		}		{			handleOP		} ifelse	} bd	/Bc	{		gsave		setBSpace		nColors 1 gt		{			blend? startC? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cData type /stringtype eq			{				linImg			}			{				bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/discardCMY	{		counttomark 4 add -3 roll pop pop pop	} bd	/testTopCC	{		6 copy ccThrough?	} bd	/getCRamp	{		{			ccDataProcs colorType 2 sub get exec		} stopped pop		blend? cDataLen 0 eq and		{			/cDataLen bDataLen store		} if	} bd	/ccGetRData	{		/fCMYK? false store		/startC? false store		/endC? false store		colorType 2 lt		{			/blend? false def		} if		blend?		{			getCRamp		}		{			setCStop		} ifelse		blend?		{			/blend? cData 1 ne store			blend?			{				cData dup type /stringtype ne				{					1 exch sub /cData xs 0				} if				pop			} if		} if	} def	/ccDataProcs	[	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			/blend? false store			pop		}		{			mark 7 1 roll			testTopCC			{				/blend? 1 index 1 ne store				/startC? blend? store				/endC? false store				blend? not				{					cleartomark stop				} if				/cData tint1Data store				setCDataLen				setCustomColor				pop				stop			} if			cleartomark		} ifelse		2 index 0 eq		{			/blend? false store		}		{			mark 6			{				9 index			} repeat			testTopCC dup /blend? xs			{				/blend? 1 index 1 ne store				/endC? blend? store				/startC? false store				blend? not				{					cleartomark stop				} if				/cData tint2Data store				setCDataLen			} if			cleartomark		} ifelse	} bind	] def	/ccGetRData} ifload Adobe_blend_AI5_vars /getData 3 -1 roll put/setCDataLen{	/cDataLen 0 cData dup type /stringtype eq	{		length exch	} if	pop store} bd/initSpotData{ begin		/name null def		/tintImage null def		/tintValue null def		/spot_C  null def		/spot_M  null def		/spot_Y  null def		/spot_K  null def end} bd/getRData{	/colorType gMark store	_compositeSpotDevice 0 ne	{		spotDict begin			spot1 initSpotData			spot2 initSpotData	 end		/spotColor? colorType 2 eq colorType 3 eq or def	} 	{		/spotColor? false store	} ifelse	/blend? true store	0 0 0 0 setcmykcolor	100 div /rampPoint xs% (between 13 and 87%) 	100 div /midPoint xs	dup 0 eq	{		2	}	{		dup 1 eq		{			5		}		{			_compositeSpotDevice 0 ne			{				spotDict begin					spot1 begin						/name 3 index def						/spot_K 4 index def						/spot_Y 5 index def						/spot_M 6 index def						/spot_C 7 index def				 end			 end			} if			7		} ifelse	} ifelse	/tmp exch def	tmp index 100 div /endPoint xs	_compositeSpotDevice 0 ne	{		tmp 2 add index 3 eq		{			/tmp tmp 4 add def			tmp index dup 			spotDict begin				spot1/name get ne				{					spot2 begin						/name exch def						/spot_K tmp 2 add index def						/spot_Y tmp 3 add index def						/spot_M tmp 4 add index def						/spot_C tmp 5 add index def				 end				}				{					pop				} ifelse		 end		} if	} if	/color? colorType 0 gt store		colorType 3 eq	{		/tint2Data gMark store	} if		colorType 2 ge	{		/tint1Data gMark store	} if	_compositeSpotDevice 0 ne	{		spotDict begin					colorType 2 ge			{				colorType 3 eq				{					spot2 begin						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def						name null eq {/name /Black def} if				 end				} if				spot1 begin					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def					colorType 2 eq 					{						name null eq 						{							/name spot2/name get def							spot2/name null put						} if					}					{						name null eq {/name /Black def} if					} ifelse			 end			} if	 end	} if		/cData gMark store	setCDataLen	colorType 0 gt	{		counttomark 4 add -3 roll		/yeData xs		/mgData xs		/cyData xs	} if	blend?	{		/bDataLen		cDataLen dup 0 eq color? and		{			[			cyData mgData yeData			]			{				dup type /stringtype eq				{					length exch pop exit				} if				pop			} forall		} if		store		bDataLen 0 eq		{			/bDataLen 1 store		} if		getData		blend?		{			composite? cDataLen 0 eq and			{				/cDataLen bDataLen store			} if		} if	}	{		setCStop	} ifelse} bd/Bg{	0 0 0 0 setcmykcolor	6	{		pop	} repeat	/blendLength xs	pop pop pop	/cBName xs	/bRender xs	bRender 2 ne	{		composite? not		{			_of setoverprint		} if		_eo {eoclip} {clip} ifelse		_bn cBName 2 copy known		{			get			mark exch aload pop			/cBType xs			/nColors xs			mark exch aload pop			0 0		} if		pop pop		getRData		cBType 0 eq		{			/linealBm		}		{			bHi?			{				/pTState? nColors 2 gt store			} if			/doBlend /rdBlend load store			/rdBm		} ifelse	}	{		inLine? not		{			mark mark		} if		/Bc dup		{			cleartomark mark		} bd		/nullProc	} ifelse	load /Bm xs} bd/linImgnoImg{	{		newpath doRctBlend	}}{	{		/doBlend		color? composite? and		{			/bCImg		}		{			/bwImage		} ifelse		load		store			0 0 moveto		tRectOK? composite? and		{			{				mark				0 1 dtransform atan cvi 90 mod 0 eq				1 0 dtransform atan cvi 90 mod 0 eq			} stopped			{				cleartomark			}			{				and exch pop				{					newpath					doRctBlend				}				{					doBlend				} ifelse			} ifelse		}		{			doBlend		} ifelse	} } ifelsebd/doRctBlend{	gsave	/sInc 1 store	/nSamples bDataLen store	/bInc 1 bDataLen div store	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store	/pChange ubAxis 0 eq	{		0	}	{		bDataLen ubAxis div	} ifelse	store	pChange .5 gt noImg not and dup /optimize? xs	{		/nSamples ubAxis 2 div round cvi dup 1 le		{			pop 2		} if		store		/bInc 1 nSamples div store		/sInc bDataLen 1 sub nSamples 1 sub div store	} if	0	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	/rectfill where dup	{		exch pop _compositeSpotDevice 1 ne and	} if	{		0 0 bInc 1 /rectfill cvx		}	{		0 0 /moveto cvx		bInc 0 /lineto cvx		bInc 1 /lineto cvx		0 1 /lineto cvx		/closepath cvx		/_fill_ cvx	} ifelse	bInc 0 /translate cvx	sInc /add cvx	] cvx	bind	repeat	pop	spotColor? {nsetcustomcolorend} if		grestore} bd/rdPrep{	/nSamples bDataLen dup 0 eq	{		pop 1	} if	store	/sInc -1 store	/bAxis rampPoint endPoint sub store	/bInc bAxis bDataLen div neg store	/optimize? false store	tRectOK?	{		/ubAxis		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		2 copy lt		{			exch		} if		pop store		/pChange ubAxis 0 eq		{			0		}		{			bDataLen ubAxis div		} ifelse		store		pChange .5 gt noImg not and dup /optimize? xs		{			/nSamples ubAxis 2 div round cvi dup 1 le			{				pop 2			} if			store			/bInc bAxis nSamples div neg store			/sInc bDataLen 1 sub nSamples 1 sub div neg store		} if	} if	bHi?	{		/xBCInc xHi bAxis mul nSamples div store		/yBCInc yHi bAxis mul nSamples div store	} if} bd/rdBlend{	newpath	gsave	rdPrep	rampPoint	bDataLen 1 sub	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx	/exch cvx bInc /add cvx /exch cvx	sInc /add cvx	bHi?	{		xBCInc yBCInc /translate cvx	} if	] cvx	bind	repeat	pop pop	spotColor? {nsetcustomcolorend} if	grestore	pTState?	{		xHi bAxis mul yHi bAxis mul translate	} if} bd/Bh{	pop pop	/pTState? false store	2 copy 0 ne exch 0 ne or dup /bHi? xs	{		/yHi xs		/xHi xs		0 0	} if	pop pop} bd/BD{	inLine? not	{		] nColors cBType		] _bn cBName 3 -1 roll put end} if} bd/Bn{1 add dictdup nullString null put/_bn xs} bd/Bd{Adobe_blend_AI5_vars begin	3 -1 roll dup nullString eq dup	{		setSSave	} if	/inLine? exch def	/cBName exch def	/nColors exch def	/cBType exch def} bd/Bb{	sSave null eq	{		Adobe_blend_AI5_vars begin		setSSave	} if	composite?	{		/_fill /fill load store	}	{		/__fill /fill load store			/_fill			{				_of true eq				{					currentgray 1 ne					{						__fill					} if				}				{					__fill				} ifelse			} def	} ifelse	/fill	{	} def	} bd	/BB	{	/cBType xs	cleartomark cleartomark	cBType dup	bRender	sSave dup type /savetype eq	{		restore 0	} if	pop	currentdict Adobe_blend_AI5_vars eq	{	 end	} if	2 ne exch 0 gt and	{		2 eq		{			s		}		{			S		} ifelse	}	{		pop newpath	} ifelse} bdcurrentdict readonly popendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 17 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin		/initialize	{ 		Adobe_ColorImage_AI6 begin		Adobe_ColorImage_AI6		{			dup type /arraytype eq			{				dup xcheck				{					bind				} if			} if			pop pop		} forall	} def	/terminate { end } def		currentdict /Adobe_ColorImage_AI6_Vars known not	{		/Adobe_ColorImage_AI6_Vars 14 dict def	} if		Adobe_ColorImage_AI6_Vars begin		/channelcount 0 def		/sourcecount 0 def		/sourcearray 4 array def		/plateindex -1 def		/XIMask 0 def		/XIBinary 0 def		/XIChannelCount 0 def		/XIBitsPerPixel 0 def		/XIImageHeight 0 def		/XIImageWidth 0 def		/XIImageMatrix null def		/XIBuffer null def		/XIDataProc null def end		/WalkRGBString null def	/WalkCMYKString null def		/StuffRGBIntoGrayString null def	/RGBToGrayImageProc null def	/StuffCMYKIntoGrayString null def	/CMYKToGrayImageProc null def	/ColorImageCompositeEmulator null def		/SeparateCMYKImageProc null def		/FourEqual null def	/TestPlateIndex null def		currentdict /_colorimage known not	{		/colorimage where		{			/colorimage get /_colorimage exch def		}		{			/_colorimage null def		} ifelse	} if		/_currenttransfer systemdict /currenttransfer get def		/colorimage null def	/XI null def			/WalkRGBString	{		0 3 index			dup length 1 sub 0 3 3 -1 roll		{			3 getinterval { } forall				5 index exec				3 index		} for				 5 { pop } repeat		} def			/WalkCMYKString	{		0 3 index			dup length 1 sub 0 4 3 -1 roll		{			4 getinterval { } forall						6 index exec						3 index					} for				5 { pop } repeat			} def			/StuffRGBIntoGrayString	{		.11 mul exch				.59 mul add exch				.3 mul add				cvi 3 copy put				pop 1 add	} def			/RGBToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin 			sourcearray 0 get exec			dup length 3 idiv string			dup 3 1 roll 						/StuffRGBIntoGrayString load exch			WalkRGBString	 end	} def			/StuffCMYKIntoGrayString	{		exch .11 mul add				exch .59 mul add				exch .3 mul add				dup 255 gt { pop 255 } if				255 exch sub cvi 3 copy put				pop 1 add	} def			/CMYKToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin			sourcearray 0 get exec			dup length 4 idiv string			dup 3 1 roll 						/StuffCMYKIntoGrayString load exch			WalkCMYKString	 end	} def			/ColorImageCompositeEmulator	{		pop true eq		{			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat		}		{			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne			{				Adobe_ColorImage_AI6_Vars begin					sourcearray 0 3 -1 roll put									channelcount 3 eq 					{ 						/RGBToGrayImageProc 					}					{ 						/CMYKToGrayImageProc					} ifelse					load			 end			} if			image		} ifelse	} def			/SeparateCMYKImageProc	{			Adobe_ColorImage_AI6_Vars begin				sourcecount 0 ne			{				sourcearray plateindex get exec			}			{							sourcearray 0 get exec								dup length 4 idiv string								0 2 index								plateindex 4 2 index length 1 sub				{					get 255 exch sub										3 copy put pop 1 add										2 index				} for					pop pop exch pop			} ifelse	 end	} def				/FourEqual	{		4 index ne		{			pop pop pop false		}		{			4 index ne			{				pop pop false			}			{				4 index ne				{					pop false				}				{					4 index eq				} ifelse			} ifelse		} ifelse	} def			/TestPlateIndex	{		Adobe_ColorImage_AI6_Vars begin			/plateindex -1 def				/setcmykcolor where			{				pop				gsave				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub				grestore					1 0 0 0 FourEqual 				{ 					/plateindex 0 def				}				{					0 1 0 0 FourEqual					{ 						/plateindex 1 def					}					{						0 0 1 0 FourEqual						{							/plateindex 2 def						}						{							0 0 0 1 FourEqual							{ 								/plateindex 3 def							}							{								0 0 0 0 FourEqual								{									/plateindex 5 def								} if							} ifelse						} ifelse					} ifelse				} ifelse				pop pop pop pop			} if			plateindex	 end	} def			/colorimage	{		Adobe_ColorImage_AI6_Vars begin			/channelcount 1 index def			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def				4 sourcecount add index dup 			8 eq exch 1 eq or not	 end				{			/_colorimage load null ne			{				_colorimage			}			{				Adobe_ColorImage_AI6_Vars /sourcecount get				7 add { pop } repeat			} ifelse		}		{			dup 3 eq			TestPlateIndex			dup -1 eq exch 5 eq or or			{				/_colorimage load null eq				{					ColorImageCompositeEmulator				}				{					dup 1 eq					{						pop pop image					}					{						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							gsave														0 _currenttransfer exec							1 _currenttransfer exec							eq							{ 0 _currenttransfer exec 0.5 lt }							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse														{ { pop 0 } } { { pop 1 } } ifelse							systemdict /settransfer get exec						} if												_colorimage												Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							grestore						} if					} ifelse				} ifelse			}			{				dup 1 eq				{					pop pop					image				}				{					pop pop						Adobe_ColorImage_AI6_Vars begin						sourcecount -1 0						{										exch sourcearray 3 1 roll put						} for							/SeparateCMYKImageProc load				 end						systemdict /image get exec				} ifelse			} ifelse		} ifelse	} def		/XI	{		Adobe_ColorImage_AI6_Vars begin			gsave			/XIMask exch 0 ne def			/XIBinary exch 0 ne def			pop			pop			/XIChannelCount exch def			/XIBitsPerPixel exch def			/XIImageHeight exch def			/XIImageWidth exch def			pop pop pop pop			/XIImageMatrix exch def						XIBitsPerPixel 1 eq			{				XIImageWidth 8 div ceiling cvi			}			{				XIImageWidth XIChannelCount mul			} ifelse			/XIBuffer exch string def						XIBinary			{				/XIDataProc { currentfile XIBuffer readstring pop } def				currentfile 128 string readline pop pop			}			{				/XIDataProc { currentfile XIBuffer readhexstring pop } def			} ifelse						0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale						XIMask			{				XIImageWidth XIImageHeight				false				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								/_lp /null ddef				_fc				/_lp /imagemask ddef								imagemask			}			{				XIImageWidth XIImageHeight				XIBitsPerPixel				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								XIChannelCount 1 eq				{										gsave					0 setgray										image										grestore				}				{					false					XIChannelCount					colorimage				} ifelse			} ifelse			grestore	 end	} def	end%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 %%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Times-BoldAdobe_level2_AI5 /initialize get execAdobe_screens_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Times-Bold Times-Bold[/_Times-Bold/Times-Bold 0 0 1 TZ%AI3_EndEncoding TrueType2 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Purple Radial)(Yellow & Purple Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_Bs1 1 0 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp6 Bn%AI5_BeginGradient: (Green & Blue)(Green & Blue) 0 2 Bd[<99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152535354555656575859595A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br[1 0.75 0 0 1 50 100 %_Bs0.6 0 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink, Yellow, Green)(Pink, Yellow, Green) 0 3 Bd[<0000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202020203030303030303030303030303030303030303030304040404040404040404040404040404040404040505050505050505050505050505050505050506060606060606060606060606060606060606070707070707070707070707070707070707080808080808080808080808080808080809090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D><050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F101011111212131314141515161717181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F606162636364656666676869696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F8081828383848586878788898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8A9AAABACADADAEAFB0B1B2B2><CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A59585756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A19181817171616151414131312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202020201010101010000000000><00000000000000000000000001010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404050505050505050505050505050505050505050505050505050505050505050505050505050505050505><BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC>01 %_Br[0.05 0.7 0 0 1 50 100 %_Bs0 0.02 0.8 0 1 57 36 %_Bs0.45 0 0.75 0 1 37 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple, Red & Yellow)(Purple, Red & Yellow) 0 3 Bd[0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A><CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF>01 %_Br<E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF><00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F40414243444545464748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC>01 %_Br[0 0.04 1 0 1 50 100 %_Bs0 1 0.8 0 1 50 50 %_Bs0.9 0.9 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_Bs1 1 0 0 1 50 80 %_Bs1 0.0279 0 0 1 50 60 %_Bs1 0 1 0 1 50 40 %_Bs0 0 1 0 1 50 20 %_Bs0 1 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Steel Bar)(Steel Bar) 0 3 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0 0 50 100 %_Bs1 0 50 70 %_Bs0 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5>01 %_Br[0 0 1 0 1 52 19 %_Bs0 0.55 0.9 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 2 PbPnPc1 gPc0 gPc0 0 0 0 kPc0.75 gPc0.5 gPc0.25 gPc0 gPcBb2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0 0 0 kPc0.5 0 0 0 kPc0.75 0 0 0 kPc1 0 0 0 kPc0.25 0.25 0 0 kPc0.5 0.5 0 0 kPc0.75 0.75 0 0 kPc1 1 0 0 kPcBb2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0 0 kPc0 0.5 0 0 kPc0 0.75 0 0 kPc0 1 0 0 kPc0 0.25 0.25 0 kPc0 0.5 0.5 0 kPc0 0.75 0.75 0 kPc0 1 1 0 kPcBb0 0 0 0 Bh2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0 0.25 0 kPc0 0 0.5 0 kPc0 0 0.75 0 kPc0 0 1 0 kPc0.25 0 0.25 0 kPc0.5 0 0.5 0 kPc0.75 0 0.75 0 kPc1 0 1 0 kPcBb2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0 0 kPc0.5 0.25 0 0 kPc0.75 0.375 0 0 kPc1 0.5 0 0 kPc0.125 0.25 0 0 kPc0.25 0.5 0 0 kPc0.375 0.75 0 0 kPc0.5 1 0 0 kPcBb2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0.125 0 kPc0 0.5 0.25 0 kPc0 0.75 0.375 0 kPc0 1 0.5 0 kPc0 0.125 0.25 0 kPc0 0.25 0.5 0 kPc0 0.375 0.75 0 kPc0 0.5 1 0 kPcBb2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0 0.25 0 kPc0.25 0 0.5 0 kPc0.375 0 0.75 0 kPc0.5 0 1 0 kPc0.25 0 0.125 0 kPc0.5 0 0.25 0 kPc0.75 0 0.375 0 kPc1 0 0.5 0 kPcBb2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0.125 0 kPc0.5 0.25 0.25 0 kPc0.75 0.375 0.375 0 kPc1 0.5 0.5 0 kPc0.25 0.25 0.125 0 kPc0.5 0.5 0.25 0 kPc0.75 0.75 0.375 0 kPc1 1 0.5 0 kPcBb0 0 0 0 Bh2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0.25 0.125 0 kPc0.25 0.5 0.25 0 kPc0.375 0.75 0.375 0 kPc0.5 1 0.5 0 kPc0.125 0.25 0.25 0 kPc0.25 0.5 0.5 0 kPc0.375 0.75 0.75 0 kPc0.5 1 1 0 kPc0 0 0 0 kPc0.125 0.125 0.25 0 kPc0.25 0.25 0.5 0 kPc0.375 0.375 0.75 0 kPc0.5 0.5 1 0 kPc0.25 0.125 0.25 0 kPc0.5 0.25 0.5 0 kPc0.75 0.375 0.75 0 kPc1 0.5 1 0 kPc0 0 0 0 kPcPcPcPc0.03 1 0.78 0 kPc0 0 0 0 kPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPc0.03 1 0.78 0 kPc0 0 0 0 kPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPcPc0.03 1 0.78 0 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au0 R1 1 0 0 K800 Ar0 J 0 j 0.666 w 4 M []0 d%AI3_Note:0 D0 XR86.6095 629.9475 m103.3874 629.9475 L105.1373 629.9475 104.6924 634.694 105.3022 634.694 c105.9119 634.694 105.9119 626.042 106.5216 626.042 c107.1315 626.042 107.1315 634.694 107.7413 634.694 c108.3516 634.694 108.3516 626.042 108.9618 626.042 c109.5728 626.042 109.5728 634.694 110.1838 634.694 c110.7959 634.694 110.7959 626.042 111.408 626.042 c112.0217 626.042 112.0217 634.694 112.6353 634.694 c113.251 634.694 113.251 626.042 113.8667 626.042 c114.4849 626.042 114.4849 634.694 115.1031 634.694 c115.7049 634.694 115.7049 626.042 116.3067 626.042 c116.9112 626.042 116.9112 634.694 117.5157 634.694 c118.1237 634.694 118.1237 626.042 118.7317 626.042 c119.344 626.042 119.344 634.694 119.9563 634.694 c120.5738 634.694 120.5738 626.042 121.1914 626.042 c121.7936 626.042 121.7936 634.694 122.3958 634.694 c123.0042 634.694 123.0042 626.042 123.6125 626.042 c124.2285 626.042 124.2285 634.694 124.8444 634.694 c125.4462 634.694 125.4462 626.042 126.048 626.042 c126.6591 626.042 126.6591 634.694 127.2702 634.694 c127.8681 634.694 127.8681 626.042 128.466 626.042 c129.0757 626.042 129.0757 634.694 129.6854 634.694 c130.2837 634.694 130.2837 626.042 130.882 626.042 c131.4959 626.042 131.4959 634.694 132.1099 634.694 c132.7156 634.694 132.7156 626.042 133.3214 626.042 c133.92 626.042 133.92 634.694 134.5185 634.694 c135.1113 634.694 135.1113 626.042 135.704 626.042 c136.325 626.042 136.325 634.694 136.946 634.694 c137.5379 634.694 137.5379 626.042 138.1299 626.042 c138.7267 626.042 138.7267 634.694 139.3236 634.694 c139.9334 634.694 139.9334 626.042 140.5432 626.042 c141.1383 626.042 141.1383 634.694 141.7335 634.694 c142.3217 634.694 142.3217 626.042 142.9098 626.042 c143.5027 626.042 143.5027 634.694 144.0957 634.694 c144.6293 634.694 143.8397 628.6857 145.7954 629.2265 c166.1759 629.2265 lS1 Ap0 O1 g94 619.5 m94 643 L75.5 643 L75.5 619.5 L94 619.5 Lf0 Ap0 R1 1 0 0 K353.5615 629.9503 m370.3394 629.9503 L372.0893 629.9503 371.6444 634.6969 372.2542 634.6969 c372.8639 634.6969 372.8639 626.0449 373.4736 626.0449 c374.0835 626.0449 374.0835 634.6969 374.6933 634.6969 c375.3036 634.6969 375.3036 626.0449 375.9138 626.0449 c376.5248 626.0449 376.5248 634.6969 377.1358 634.6969 c377.7479 634.6969 377.7479 626.0449 378.36 626.0449 c378.9737 626.0449 378.9737 634.6969 379.5873 634.6969 c380.203 634.6969 380.203 626.0449 380.8186 626.0449 c381.4369 626.0449 381.4369 634.6969 382.0551 634.6969 c382.6569 634.6969 382.6569 626.0449 383.2586 626.0449 c383.8632 626.0449 383.8632 634.6969 384.4677 634.6969 c385.0757 634.6969 385.0757 626.0449 385.6837 626.0449 c386.296 626.0449 386.296 634.6969 386.9083 634.6969 c387.5258 634.6969 387.5258 626.0449 388.1434 626.0449 c388.7456 626.0449 388.7456 634.6969 389.3478 634.6969 c389.9562 634.6969 389.9562 626.0449 390.5645 626.0449 c391.1804 626.0449 391.1804 634.6969 391.7964 634.6969 c392.3982 634.6969 392.3982 626.0449 393 626.0449 c393.6111 626.0449 393.6111 634.6969 394.2222 634.6969 c394.8201 634.6969 394.8201 626.0449 395.418 626.0449 c396.0277 626.0449 396.0277 634.6969 396.6374 634.6969 c397.2357 634.6969 397.2357 626.0449 397.834 626.0449 c398.4479 626.0449 398.4479 634.6969 399.0619 634.6969 c399.6676 634.6969 399.6676 626.0449 400.2734 626.0449 c400.8719 626.0449 400.8719 634.6969 401.4705 634.6969 c402.0633 634.6969 402.0633 626.0449 402.656 626.0449 c403.277 626.0449 403.277 634.6969 403.898 634.6969 c404.4899 634.6969 404.4899 626.0449 405.0818 626.0449 c405.6787 626.0449 405.6787 634.6969 406.2756 634.6969 c406.8854 634.6969 406.8854 626.0449 407.4952 626.0449 c408.0903 626.0449 408.0903 634.6969 408.6855 634.6969 c409.2736 634.6969 409.2736 626.0449 409.8618 626.0449 c410.4547 626.0449 410.4547 634.6969 411.0476 634.6969 c411.5813 634.6969 410.7917 628.6886 412.7474 629.2293 c433.1279 629.2293 lSu224.5852 616.0958 m241.3631 616.0958 L243.1129 616.0958 242.668 620.8424 243.2779 620.8424 c243.8876 620.8424 243.8876 612.1903 244.4973 612.1903 c245.1071 612.1903 245.1071 620.8424 245.717 620.8424 c246.3272 620.8424 246.3272 612.1903 246.9375 612.1903 c247.5485 612.1903 247.5485 620.8424 248.1595 620.8424 c248.7716 620.8424 248.7716 612.1903 249.3837 612.1903 c249.9974 612.1903 249.9974 620.8424 250.611 620.8424 c251.2267 620.8424 251.2267 612.1903 251.8423 612.1903 c252.4606 612.1903 252.4606 620.8424 253.0788 620.8424 c253.6806 620.8424 253.6806 612.1903 254.2823 612.1903 c254.8869 612.1903 254.8869 620.8424 255.4914 620.8424 c256.0994 620.8424 256.0994 612.1903 256.7074 612.1903 c257.3197 612.1903 257.3197 620.8424 257.932 620.8424 c258.5495 620.8424 258.5495 612.1903 259.167 612.1903 c259.7693 612.1903 259.7693 620.8424 260.3715 620.8424 c260.9798 620.8424 260.9798 612.1903 261.5882 612.1903 c262.2041 612.1903 262.2041 620.8424 262.8201 620.8424 c263.4219 620.8424 263.4219 612.1903 264.0237 612.1903 c264.6348 612.1903 264.6348 620.8424 265.2458 620.8424 c265.8437 620.8424 265.8438 612.1903 266.4417 612.1903 c267.0514 612.1903 267.0514 620.8424 267.6611 620.8424 c268.2594 620.8424 268.2594 612.1903 268.8576 612.1903 c269.4716 612.1903 269.4716 620.8424 270.0856 620.8424 c270.6913 620.8424 270.6913 612.1903 271.2971 612.1903 c271.8956 612.1903 271.8956 620.8424 272.4942 620.8424 c273.0869 620.8424 273.0869 612.1903 273.6797 612.1903 c274.3007 612.1903 274.3007 620.8424 274.9216 620.8424 c275.5136 620.8424 275.5136 612.1903 276.1055 612.1903 c276.7024 612.1903 276.7024 620.8424 277.2993 620.8424 c277.9091 620.8424 277.9091 612.1903 278.5188 612.1903 c279.114 612.1903 279.114 620.8424 279.7092 620.8424 c280.2973 620.8424 280.2973 612.1903 280.8854 612.1903 c281.4784 612.1903 281.4784 620.8424 282.0713 620.8424 c282.6049 620.8424 281.8154 614.834 283.7711 615.3748 c304.1516 615.3748 lS223.7793 643.7006 m240.5572 643.7006 L242.307 643.7006 241.8621 648.4472 242.472 648.4472 c243.0817 648.4472 243.0817 639.7952 243.6914 639.7952 c244.3012 639.7952 244.3012 648.4472 244.9111 648.4472 c245.5213 648.4472 245.5213 639.7952 246.1316 639.7952 c246.7426 639.7952 246.7426 648.4472 247.3536 648.4472 c247.9657 648.4472 247.9657 639.7952 248.5778 639.7952 c249.1914 639.7952 249.1914 648.4472 249.8051 648.4472 c250.4208 648.4472 250.4208 639.7952 251.0364 639.7952 c251.6547 639.7952 251.6547 648.4472 252.2729 648.4472 c252.8746 648.4472 252.8746 639.7952 253.4764 639.7952 c254.081 639.7952 254.081 648.4472 254.6855 648.4472 c255.2935 648.4472 255.2935 639.7952 255.9015 639.7952 c256.5138 639.7952 256.5138 648.4472 257.126 648.4472 c257.7436 648.4472 257.7436 639.7952 258.3611 639.7952 c258.9634 639.7952 258.9634 648.4472 259.5656 648.4472 c260.1739 648.4472 260.1739 639.7952 260.7823 639.7952 c261.3982 639.7952 261.3982 648.4472 262.0142 648.4472 c262.616 648.4472 262.6159 639.7952 263.2178 639.7952 c263.8289 639.7952 263.8289 648.4472 264.4399 648.4472 c265.0378 648.4472 265.0379 639.7952 265.6358 639.7952 c266.2455 639.7952 266.2455 648.4472 266.8552 648.4472 c267.4535 648.4472 267.4535 639.7952 268.0517 639.7952 c268.6657 639.7952 268.6657 648.4472 269.2796 648.4472 c269.8854 648.4472 269.8854 639.7952 270.4912 639.7952 c271.0897 639.7952 271.0897 648.4472 271.6883 648.4472 c272.281 648.4472 272.281 639.7952 272.8738 639.7952 c273.4947 639.7952 273.4948 648.4472 274.1157 648.4472 c274.7077 648.4472 274.7077 639.7952 275.2996 639.7952 c275.8965 639.7952 275.8965 648.4472 276.4933 648.4472 c277.1031 648.4472 277.1031 639.7952 277.7129 639.7952 c278.3081 639.7952 278.3081 648.4472 278.9033 648.4472 c279.4914 648.4472 279.4914 639.7952 280.0795 639.7952 c280.6725 639.7952 280.6725 648.4472 281.2654 648.4472 c281.799 648.4472 281.0095 642.4388 282.9652 642.9796 c303.3457 642.9796 lSUuuq1 Ap1 w74.704 588.984 m94.5449 588.984 L94.5449 679.3698 L74.704 679.3698 L74.704 588.984 LhWnu0 Ap0 R1 1 0 0 K1.65 w72.5128 682.541 m98.91 659.7709 lS72.5128 664.2519 m98.91 641.4818 lS72.5128 645.9629 m98.91 623.1927 lS72.5128 623.1015 m98.91 600.3314 lS72.5128 650.5351 m98.91 627.765 lS72.5128 627.6738 m98.91 604.9037 lS72.5128 636.8183 m98.91 614.0482 lS72.5128 613.957 m98.91 591.1869 lS72.5128 600.2402 m98.91 577.4701 lS72.5128 591.0956 m98.91 568.3255 lS72.5128 604.8125 m98.91 582.0423 lS72.5128 595.6679 m98.91 572.8978 lS72.5128 696.2578 m98.91 673.4877 lS72.5128 691.6856 m98.91 668.9154 lS72.5128 677.9688 m98.91 655.1986 lS72.5128 659.6797 m98.91 636.9096 lS72.5128 687.1133 m98.91 664.3432 lS72.5128 668.8242 m98.91 646.0541 lS72.5128 673.3965 m98.91 650.6264 lS72.5128 655.1074 m98.91 632.3373 lS72.5128 632.2461 m98.91 609.4759 lS72.5128 609.3847 m98.91 586.6146 lS72.5128 641.3906 m98.91 618.6205 lS72.5128 618.5293 m98.91 595.7591 lSUQU0 A1 Ap0 R1 1 0 0 K800 Ar1 J 0 j 1.65 w 4 M []0 d%AI3_Note:0 D0 XR94.7452 679.5703 m94.7452 589.1844 LSUuu0 O1 w365.6968 599.8352 m365.6968 659.8352 L287.0302 659.8352 L287.0302 599.8352 L365.6968 599.8352 LBb1 (Black & White) 180.6667 686 -53.7557 207.479 1 0 0 1 105.6968 -6.5019 Bg7132.6258 -9729.6548 -83.0044 -60.8489 -6808.6236 10449.7489 Bc122.6683 -167.3325 -83.0044 -60.8489 324.0022 720.0941 Bm7132.6258 -9729.6548 -83.0044 -60.8489 446.6705 552.7616 Bcb2 BBuuq0 J371.2775 568.4476 m371.2775 588.2885 L280.8917 588.2885 L280.8917 568.4476 L371.2775 568.4476 LhWnu0 Ap0 R1 1 0 0 K1.65 w277.7205 566.2564 m300.4906 592.6536 lS296.0095 566.2564 m318.7797 592.6536 lS314.2986 566.2564 m337.0687 592.6536 lS337.16 566.2564 m359.9301 592.6536 lS309.7263 566.2564 m332.4965 592.6536 lS332.5877 566.2564 m355.3578 592.6536 lS323.4432 566.2564 m346.2133 592.6536 lS346.3045 566.2564 m369.0746 592.6536 lS360.0213 566.2564 m382.7914 592.6536 lS369.1658 566.2564 m391.936 592.6536 lS355.449 566.2564 m378.2192 592.6536 lS364.5936 566.2564 m387.3637 592.6536 lS264.0036 566.2564 m286.7738 592.6536 lS268.5759 566.2564 m291.346 592.6536 lS282.2927 566.2564 m305.0628 592.6536 lS300.5818 566.2564 m323.3519 592.6536 lS273.1482 566.2564 m295.9183 592.6536 lS291.4373 566.2564 m314.2074 592.6536 lS286.865 566.2564 m309.6351 592.6536 lS305.1541 566.2564 m327.9242 592.6536 lS328.0154 566.2564 m350.7855 592.6536 lS350.8768 566.2564 m373.6469 592.6536 lS318.8709 566.2564 m341.641 592.6536 lS341.7322 566.2564 m364.5024 592.6536 lSUQU0 A1 Ap0 R1 1 0 0 K800 Ar1 J 0 j 1.65 w 4 M []0 d%AI3_Note:0 D0 XR280.6912 588.4888 m371.0771 588.4888 LSUu0 O309.117 611.6395 m302.9312 611.6395 297.9164 606.6248 297.9164 600.4389 c297.9164 594.2531 302.9312 589.2383 309.117 589.2383 c315.3029 589.2383 320.3176 594.2531 320.3176 600.4389 c320.3176 606.6248 315.3029 611.6395 309.117 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 207.9551 633.4287 129.4598 55.7871 0.33 0 0 0.33 2929.8641 2768.3051 Bg-11.7003 14.2132 14.2132 11.7003 309.117 600.4389 Bmb2 BB345.7002 611.6395 m339.5143 611.6395 334.4995 606.6248 334.4995 600.4389 c334.4995 594.2531 339.5143 589.2383 345.7002 589.2383 c351.886 589.2383 356.9008 594.2531 356.9008 600.4389 c356.9008 606.6248 351.886 611.6395 345.7002 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 318.8125 634.3706 130.8306 51.7146 0.33 0 0 0.33 2929.8641 2768.6159 Bg-11.1579 12.9129 12.9129 11.1579 345.7002 600.4389 Bmb2 BBU0 To1 0 0 1 317.6968 620.5019 0 TpTP0 Tr0 1 1 0 k0 J 1 w/_Times-Bold 36 Tf0 Ts100 Tz0 Tt0 TA%_ 0 XL35.0398 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 0 2 2 3 Th0 Tq0 0 Tl0 Tc0 Tw(2) Tx (\r) TX TOUuu0 R1 1 0 0 K1 J233.7664 599.8352 m233.7664 659.8352 L155.0998 659.8352 L155.0998 599.8352 L233.7664 599.8352 LBb1 (Black & White) 180.6667 686 -53.7557 207.479 1 0 0 1 -26.2336 -6.5019 Bg7132.6258 -9729.6548 -83.0044 -60.8489 -6940.554 10449.7489 Bc122.6683 -167.3325 -83.0044 -60.8489 192.0718 720.0941 Bm7132.6258 -9729.6548 -83.0044 -60.8489 314.7401 552.7616 Bcb2 BBuuq0 J239.914 568.4476 m239.914 588.2885 L149.5282 588.2885 L149.5282 568.4476 L239.914 568.4476 LhWnu0 Ap0 R1 1 0 0 K1.65 w146.3569 566.2564 m169.1271 592.6536 lS164.646 566.2564 m187.4161 592.6536 lS182.9351 566.2564 m205.7052 592.6536 lS205.7964 566.2564 m228.5666 592.6536 lS178.3628 566.2564 m201.133 592.6536 lS201.2242 566.2564 m223.9943 592.6536 lS192.0796 566.2564 m214.8498 592.6536 lS214.941 566.2564 m237.7111 592.6536 lS228.6578 566.2564 m251.4279 592.6536 lS237.8023 566.2564 m260.5725 592.6536 lS224.0855 566.2564 m246.8556 592.6536 lS233.2301 566.2564 m256.0002 592.6536 lS132.6401 566.2564 m155.4103 592.6536 lS137.2124 566.2564 m159.9825 592.6536 lS150.9292 566.2564 m173.6993 592.6536 lS169.2183 566.2564 m191.9884 592.6536 lS141.7847 566.2564 m164.5548 592.6536 lS160.0738 566.2564 m182.8439 592.6536 lS155.5015 566.2564 m178.2716 592.6536 lS173.7906 566.2564 m196.5607 592.6536 lS196.6519 566.2564 m219.422 592.6536 lS219.5133 566.2564 m242.2834 592.6536 lS187.5074 566.2564 m210.2775 592.6536 lS210.3687 566.2564 m233.1389 592.6536 lSUQU0 A1 Ap0 R1 1 0 0 K800 Ar1 J 0 j 1.65 w 4 M []0 d%AI3_Note:0 D0 XR149.3277 588.4888 m239.7136 588.4888 LSUu0 O177.7535 611.6395 m171.5677 611.6395 166.5529 606.6248 166.5529 600.4389 c166.5529 594.2531 171.5677 589.2383 177.7535 589.2383 c183.9393 589.2383 188.9541 594.2531 188.9541 600.4389 c188.9541 606.6248 183.9393 611.6395 177.7535 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 207.9551 633.4287 129.4598 55.7871 0.33 0 0 0.33 2798.5006 2768.3051 Bg-11.7003 14.2132 14.2132 11.7003 177.7535 600.4389 Bmb2 BB214.3367 611.6395 m208.1508 611.6395 203.136 606.6248 203.136 600.4389 c203.136 594.2531 208.1508 589.2383 214.3367 589.2383 c220.5225 589.2383 225.5373 594.2531 225.5373 600.4389 c225.5373 606.6248 220.5225 611.6395 214.3367 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 318.8125 634.3706 130.8306 51.7146 0.33 0 0 0.33 2798.5006 2768.6159 Bg-11.1579 12.9129 12.9129 11.1579 214.3367 600.4389 Bmb2 BBU0 To1 0 0 1 186.3333 620.5019 0 TpTP0 Tr0 1 1 0 k0 J 1 w/_Times-Bold 36 Tf0 Ts100 Tz0 Tt0 TA%_ 0 XL35.0398 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 0 2 2 3 Th0 Tq0 0 Tl0 Tc0 Tw(1) Tx (\r) TX TOU0 Ap0 R1 1 0 0 K234.2336 649.0688 m234.2336 696.4021 l210.2336 660.4021 l234.2336 671.0688 l224.9002 683.0688 lSUuu1 Ap0 O1 J496.4934 599.8352 m496.4934 659.8352 L417.8268 659.8352 L417.8268 599.8352 L496.4934 599.8352 LBb1 (Black & White) 180.6667 686 -53.7557 207.479 1 0 0 1 236.4934 -6.5019 Bg7132.6258 -9729.6548 -83.0044 -60.8489 -6677.827 10449.7489 Bc122.6683 -167.3325 -83.0044 -60.8489 454.7988 720.0941 Bm7132.6258 -9729.6548 -83.0044 -60.8489 577.4671 552.7616 Bcb2 BBuuq0 J502.641 568.4476 m502.641 588.2885 L412.2552 588.2885 L412.2552 568.4476 L502.641 568.4476 LhWnu0 Ap0 R1 1 0 0 K1.65 w409.084 566.2564 m431.8541 592.6536 lS427.373 566.2564 m450.1432 592.6536 lS445.6621 566.2564 m468.4322 592.6536 lS468.5235 566.2564 m491.2936 592.6536 lS441.0899 566.2564 m463.86 592.6536 lS463.9512 566.2564 m486.7213 592.6536 lS454.8067 566.2564 m477.5768 592.6536 lS477.668 566.2564 m500.4381 592.6536 lS491.3848 566.2564 m514.1549 592.6536 lS500.5294 566.2564 m523.2995 592.6536 lS486.8125 566.2564 m509.5827 592.6536 lS495.9571 566.2564 m518.7272 592.6536 lS395.3672 566.2564 m418.1373 592.6536 lS399.9394 566.2564 m422.7095 592.6536 lS413.6562 566.2564 m436.4264 592.6536 lS431.9453 566.2564 m454.7154 592.6536 lS404.5117 566.2564 m427.2818 592.6536 lS422.8008 566.2564 m445.5709 592.6536 lS418.2285 566.2564 m440.9986 592.6536 lS436.5176 566.2564 m459.2877 592.6536 lS459.3789 566.2564 m482.1491 592.6536 lS482.2403 566.2564 m505.0104 592.6536 lS450.2344 566.2564 m473.0045 592.6536 lS473.0957 566.2564 m495.8659 592.6536 lSUQU0 A1 Ap0 R1 1 0 0 K800 Ar1 J 0 j 1.65 w 4 M []0 d%AI3_Note:0 D0 XR412.0547 588.4888 m502.4406 588.4888 LSUu0 O440.4805 611.6395 m434.2947 611.6395 429.2799 606.6248 429.2799 600.4389 c429.2799 594.2531 434.2947 589.2383 440.4805 589.2383 c446.6664 589.2383 451.6811 594.2531 451.6811 600.4389 c451.6811 606.6248 446.6664 611.6395 440.4805 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 207.9551 633.4287 129.4598 55.7871 0.33 0 0 0.33 3061.2276 2768.3051 Bg-11.7003 14.2132 14.2132 11.7003 440.4805 600.4389 Bmb2 BB477.0637 611.6395 m470.8778 611.6395 465.863 606.6248 465.863 600.4389 c465.863 594.2531 470.8778 589.2383 477.0637 589.2383 c483.2495 589.2383 488.2643 594.2531 488.2643 600.4389 c488.2643 606.6248 483.2495 611.6395 477.0637 611.6395 cBb0 0 0 0 Bh1 (Yellow & Purple Radial) 318.8125 634.3706 130.8306 51.7146 0.33 0 0 0.33 3061.2276 2768.6159 Bg-11.1579 12.9129 12.9129 11.1579 477.0637 600.4389 Bmb2 BBU0 To1 0 0 1 449.0603 620.5019 0 TpTP0 Tr0 1 1 0 k0 J 1 w/_Times-Bold 36 Tf0 Ts100 Tz0 Tt0 TA%_ 0 XL35.0398 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 0 2 2 3 Th0 Tq0 0 Tl0 Tc0 Tw(3) Tx (\r) TX TOU0 Ap0 R1 1 0 0 K418.2479 648.7127 m418.2479 696.0461 l442.2479 660.0461 l418.2479 670.7127 l427.5813 682.7127 lSUUu1 Ap0 O1 g0.666 w353.4707 684.9206 m353.4707 708.9206 L295.4707 708.9206 L295.4707 684.9206 L353.4707 684.9206 Lf0 Ap0 R1 1 0 0 K234.2336 696.5 m287 696.5 l303.7779 696.5 L305.5278 696.5 305.0829 701.2466 305.6927 701.2466 c306.3024 701.2466 306.3024 692.5946 306.9121 692.5946 c307.522 692.5946 307.522 701.2466 308.1318 701.2466 c308.742 701.2466 308.742 692.5946 309.3523 692.5946 c309.9633 692.5946 309.9633 701.2466 310.5743 701.2466 c311.1864 701.2466 311.1864 692.5946 311.7985 692.5946 c312.4122 692.5946 312.4122 701.2466 313.0258 701.2466 c313.6415 701.2466 313.6415 692.5946 314.2571 692.5946 c314.8754 692.5946 314.8754 701.2466 315.4936 701.2466 c316.0954 701.2466 316.0954 692.5946 316.6971 692.5946 c317.3017 692.5946 317.3017 701.2466 317.9062 701.2466 c318.5142 701.2466 318.5142 692.5946 319.1222 692.5946 c319.7345 692.5946 319.7345 701.2466 320.3468 701.2466 c320.9643 701.2466 320.9643 692.5946 321.5819 692.5946 c322.1841 692.5946 322.1841 701.2466 322.7863 701.2466 c323.3946 701.2466 323.3946 692.5946 324.003 692.5946 c324.6189 692.5946 324.6189 701.2466 325.2349 701.2466 c325.8367 701.2466 325.8367 692.5946 326.4385 692.5946 c327.0496 692.5946 327.0496 701.2466 327.6607 701.2466 c328.2586 701.2466 328.2586 692.5946 328.8565 692.5946 c329.4662 692.5946 329.4662 701.2466 330.0759 701.2466 c330.6742 701.2466 330.6742 692.5946 331.2725 692.5946 c331.8864 692.5946 331.8864 701.2466 332.5004 701.2466 c333.1061 701.2466 333.1061 692.5946 333.7119 692.5946 c334.3104 692.5946 334.3104 701.2466 334.909 701.2466 c335.5018 701.2466 335.5018 692.5946 336.0945 692.5946 c336.7155 692.5946 336.7155 701.2466 337.3365 701.2466 c337.9284 701.2466 337.9284 692.5946 338.5203 692.5946 c339.1172 692.5946 339.1172 701.2466 339.7141 701.2466 c340.3239 701.2466 340.3239 692.5946 340.9337 692.5946 c341.5288 692.5946 341.5288 701.2466 342.124 701.2466 c342.7121 701.2466 342.7121 692.5946 343.3003 692.5946 c343.8932 692.5946 343.8932 701.2466 344.4861 701.2466 c345.0198 701.2466 344.2302 695.2382 346.1859 695.779 c366.5664 695.779 l418.2479 695.779 lSUU0 To1 0 0 1 114 642 0 TpTP0 Tr0 O0 g1 w/_Times-Bold 18 Tf(k) Tx /_Times-Bold 14 Tf-6 Ts(1) Tx (\r) TX TO0 To1 0 0 1 314 712 0 TpTP0 Tr/_Times-Bold 18 Tf0 Ts(k) Tx /_Times-Bold 14 Tf-6 Ts(4) Tx (\r) TX TO0 To1 0 0 1 257.9968 597.1074 0 TpTP0 Tr/_Times-Bold 18 Tf0 Ts(k) Tx /_Times-Bold 14 Tf-6 Ts(3) Tx (\r) TX TO0 To1 0 0 1 257.9968 656.8081 0 TpTP0 Tr/_Times-Bold 18 Tf0 Ts(k) Tx /_Times-Bold 14 Tf-6 Ts(2) Tx (\r) TX TO0 To1 0 0 1 382 643 0 TpTP0 Tr/_Times-Bold 18 Tf0 Ts(k) Tx /_Times-Bold 14 Tf-6 Ts(5) Tx (\r) TX TOu0 R0 G1.5 w160.6094 666.1993 m186.1094 666.1993 lB185.4209 666.1993 m183.9425 668.6311 l184.0254 668.6863 l187.9909 667.1112 l189.3726 666.8072 190.7543 666.5032 192.136 666.1993 c190.7543 665.8953 189.3726 665.5913 187.9909 665.2873 c184.0254 663.7122 l183.9425 663.7537 l185.4209 666.1993 lbU0 To1 0 0 1 156.0782 675.6636 0 TpTP0 Tr1 w/_Times-Bold 13.5 Tf0 Ts26.2798 0 XbXB(U) Tx /_Times-Bold 10.5 Tf-4.5 Ts(1,) Tx /_Times-Bold 13.5 Tf0 Ts(R) Tx /_Times-Bold 10.5 Tf-4.5 Ts(1) Tx (\r) TX TOu0 R0 G1.5 w294.2985 665.293 m319.7985 665.293 lB319.11 665.293 m317.6315 667.7248 l317.7144 667.78 l321.6799 666.2049 l323.0617 665.9009 324.4434 665.597 325.8251 665.293 c324.4434 664.989 323.0617 664.6851 321.6799 664.381 c317.7144 662.8059 l317.6315 662.8474 l319.11 665.293 lbU0 To1 0 0 1 289.7672 675.3243 0 TpTP0 Tr1 w/_Times-Bold 13.5 Tf0 Ts(U) Tx /_Times-Bold 10.5 Tf-4.5 Ts(2,) Tx /_Times-Bold 13.5 Tf0 Ts(R) Tx /_Times-Bold 10.5 Tf-4.5 Ts(2) Tx (\r) TX TOu0 R0 G1.5 w463.9311 664.8259 m489.4311 664.8259 lB488.7426 664.8259 m487.2642 667.2577 l487.3471 667.3129 l491.3126 665.7378 l492.6943 665.4338 494.076 665.1298 495.4578 664.8259 c494.076 664.5219 492.6943 664.2179 491.3126 663.9139 c487.3471 662.3388 l487.2642 662.3803 l488.7426 664.8259 lbU0 To1 0 0 1 459.3999 674.2902 0 TpTP0 Tr1 w/_Times-Bold 13.5 Tf0 Ts(U) Tx /_Times-Bold 10.5 Tf-4.5 Ts(3,) Tx /_Times-Bold 13.5 Tf0 Ts(R) Tx /_Times-Bold 10.5 Tf-4.5 Ts(3) Tx (\r) TX TOuuu0 R0 G1.332 w157.7669 468.0956 m203.3794 468.3109 L206.8791 468.3109 205.9893 477.804 207.209 477.804 c208.4284 477.804 208.4284 460.5 209.6478 460.5 c210.8675 460.5 210.8675 477.804 212.0872 477.804 c213.3077 477.804 213.3077 460.5 214.5282 460.5 c215.7502 460.5 215.7502 477.804 216.9722 477.804 c218.1964 477.804 218.1964 460.5 219.4206 460.5 c220.6479 460.5 220.6479 477.804 221.8752 477.804 c223.1065 477.804 223.1065 460.5 224.3379 460.5 c225.5744 460.5 225.5744 477.804 226.8108 477.804 c228.0143 477.804 228.0143 460.5 229.2179 460.5 c230.427 460.5 230.427 477.804 231.636 477.804 c232.852 477.804 232.852 460.5 234.068 460.5 c235.2926 460.5 235.2926 477.804 236.5171 477.804 c237.7522 477.804 237.7522 460.5 238.9873 460.5 c240.1918 460.5 240.1918 477.804 241.3962 477.804 c242.6129 477.804 242.6129 460.5 243.8296 460.5 c245.0615 460.5 245.0615 477.804 246.2933 477.804 c247.497 477.804 247.4969 460.5 248.7006 460.5 c249.9227 460.5 249.9227 477.804 251.1449 477.804 c252.3407 477.804 252.3407 460.5 253.5366 460.5 c254.756 460.5 254.756 477.804 255.9754 477.804 c257.1719 477.804 257.1719 460.5 258.3685 460.5 c259.5964 460.5 259.5964 477.804 260.8243 477.804 c262.0358 477.804 262.0358 460.5 263.2474 460.5 c264.4445 460.5 264.4445 477.804 265.6416 477.804 c266.8271 477.804 266.8271 460.5 268.0126 460.5 c269.2545 460.5 269.2546 477.804 270.4965 477.804 c271.6804 477.804 271.6804 460.5 272.8643 460.5 c274.058 460.5 274.058 477.804 275.2517 477.804 c276.4713 477.804 276.4713 460.5 277.6909 460.5 c278.8812 460.5 278.8812 477.804 280.0716 477.804 c281.2478 477.804 281.2478 460.5 282.4241 460.5 c283.61 460.5 283.61 477.804 284.7959 477.804 c285.8631 477.804 284.2839 465.7874 288.1954 466.8688 c346.4336 466.8688 lS0 O1 1 0 0 k1 w345.8222 466.8688 m344.5094 469.0283 l344.583 469.0773 l348.1044 467.6786 l349.3313 467.4087 350.5583 467.1388 351.7852 466.8688 c350.5583 466.5989 349.3313 466.329 348.1044 466.059 c344.583 464.6603 l344.5094 464.6971 l345.8222 466.8688 lbUu1.332 w307.7669 466.7623 m307.7669 507.429 l343.7669 507.429 lS0 O1 1 0 0 k1 w343.1555 507.429 m341.8427 509.5884 l341.9163 509.6374 l345.4377 508.2387 l346.6646 507.9688 347.8916 507.6989 349.1186 507.429 c347.8916 507.159 346.6646 506.8891 345.4377 506.6191 c341.9163 505.2204 l341.8427 505.2572 l343.1555 507.429 lbUu1.332 w157.7981 468.3873 m157.7981 509.054 l193.7981 509.054 lS0 O1 1 0 0 k1 w193.1867 509.054 m191.8739 511.2134 l191.9475 511.2624 l195.4689 509.8637 l196.6958 509.5938 197.9228 509.3239 199.1497 509.054 c197.9228 508.784 196.6958 508.5141 195.4689 508.2441 c191.9475 506.8454 l191.8739 506.8822 l193.1867 509.054 lbUu1.332 w107.4412 468.7206 m149.4412 468.7206 lS0 O1 1 0 0 k1 w148.8298 468.7206 m147.517 470.8801 l147.5906 470.9291 l151.112 469.5304 l152.3389 469.2604 153.5659 468.9905 154.7929 468.7206 c153.5659 468.4507 152.3389 468.1808 151.112 467.9108 c147.5906 466.5121 l147.517 466.5489 l148.8298 468.7206 lbU1 Ap0 g1.332 w157.7669 466.0956 m159.0687 466.0956 160.124 467.1509 160.124 468.4526 c160.124 469.7544 159.0687 470.8096 157.7669 470.8096 c156.4652 470.8096 155.4099 469.7544 155.4099 468.4526 c155.4099 467.1509 156.4652 466.0956 157.7669 466.0956 cb307.7669 464.7623 m309.0687 464.7623 310.124 465.8176 310.124 467.1193 c310.124 468.421 309.0687 469.4763 307.7669 469.4763 c306.4652 469.4763 305.4099 468.421 305.4099 467.1193 c305.4099 465.8176 306.4652 464.7623 307.7669 464.7623 cbU0 To1 0 0 1 242.2638 488.8697 0 TpTP0 Tr1 w/_Times-Bold 18 Tf0 Ts35.0398 0 XbXB(k) Tx /_Times-Bold 14 Tf-6 Ts(2) Tx (\r) TX TO0 To1 0 0 1 185.7669 516.7623 0 TpTP0 Tr/_Times-Bold 13.5 Tf0 Ts26.2798 0 XbXB(U) Tx /_Times-Bold 10.5 Tf-4.5 Ts(1) Tx (\r) TX TO0 To1 0 0 1 339.7669 515.429 0 TpTP0 Tr/_Times-Bold 13.5 Tf0 Ts(U) Tx /_Times-Bold 10.5 Tf-4.5 Ts(2) Tx (\r) TX TO0 To1 0 0 1 123.7669 477.429 0 TpTP0 Tr/_Times-Bold 13.5 Tf0 Ts(F) Tx /_Times-Bold 10 Tf10 Ts(1) Tx /_Times-Bold 10.5 Tf-4.5 Ts(1) Tx (\r) TX TO0 To1 0 0 1 323.7669 473.429 0 TpTP0 Tr/_Times-Bold 13.5 Tf0 Ts(F) Tx /_Times-Bold 10 Tf10 Ts(2) Tx /_Times-Bold 10.5 Tf-4.5 Ts(2) Tx (\r) TX TOU0 To1 0 0 1 36.7937 648 0 TpTP0 Tr/_Times-Bold 21 Tf0 Ts(\(a\)) Tx (\r) TX TO0 To1 0 0 1 36.7937 463.889 0 TpTP0 Tr(\(b\)) Tx (\r) TX TOLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_blend_AI5 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_screens_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF