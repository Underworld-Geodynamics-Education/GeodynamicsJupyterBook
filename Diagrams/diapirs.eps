%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(r) 6.0%%For: (Louis Moresi) (Slave)%%Title: (diapirs.eps)%%CreationDate: (1/8/99) (11:54 am)%%BoundingBox: 88 325 537 690%%HiResBoundingBox: 88.1721 325.3648 536.7061 689.6794%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Symbol%%+ Times-Bold%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_blend_AI5 1.0 0%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 2.0%AI3_ColorUsage: Color%%CMYKCustomColor: 0.5 0.85 1 0 (Brown)%%+ 1 0.9 0.1 0 (Dark Blue)%%+ 0 0.7 1 0 (Orange Red)%%+ 0 0.25 1 0 (Orange Yellow)%%+ 0.85 1 0 0 (Purple)%%+ 0.15 1 1 0 (Red)%%+ 0.4 0.7 1 0 (Rusty Brown)%%+ 0 0.9 1 0 (Saturn Red)%%+ 0.45 0.9 0 0 (Violet)%%+ 0.75 0.9 0 0 (Violet Blue)%%+ 0.25 1 0.25 0 (Violet Red)%%+ 0.2 0 1 0 (Yellow Green)%%+ 1 0.14 0.09 0 (\245DblLine1.2.color1)%%+ 0 0.55 1 0.3 (\245Laurel.color1)%%+ 0 0.55 1 0.12 (\245Laurel.color2)%%+ 0 0.39 0.7 0.12 (\245Laurel.color3)%%+ 0 0 0 1 (\245Rope.color1)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()%AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: 102 696 2 826 581 58 0 1 2 40%AI5_OpenViewLayers: 7%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 %%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 23 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			5 packedarray		} bind def		/setcustomcolor		{			exch aload pop pop			4			{				4 index mul 4 1 roll			} repeat			5 -1 roll pop			setcmykcolor		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_screens_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)%%Version: 1.2 0%%CreationDate: (03/24/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackingsystemdict beginuserdict /Adobe_screens_AI5 13 dict dup beginput/initialize{	Adobe_screens_AI5 begin	/screenid		deviceDPI 600 gt composite? not or		{		-1		}		{			deviceDPI currentScreenFreq 			dup dup 60 ge exch 150 le and deviceDPI 300 le and		{			pop 60		} if		div 1.41421 div 0.5 add cvi		} ifelse	def		2 screenid eq	{		/customsize 16 def		/customdata /customdata2 def		setcustomscreen	} if		3 screenid eq	{		/customsize 24 def		/customdata /customdata3 def		setcustomscreen	} if		4 screenid eq	{		/customsize 16 def		/customdata /customdata4 def		setcustomscreen	} if		5 screenid eq	{		/customsize 20 def		/customdata /customdata5 def		setcustomscreen	} if		6 screenid eq	{		/customsize 24 def		/customdata /customdata6 def		setcustomscreen	} if		7 screenid eq	{		/customsize 28 def		/customdata /customdata7 def		setcustomscreen	} if		8 screenid eq	{		/customsize 16 def		/customdata /customdata8 def		setcustomscreen	} if} def/terminate{	currentdict Adobe_screens_AI5 eq	{	 end	} if} def/setcustomscreen{	deviceDPI customsize div 0	{		1 add 2 div customsize mul cvi exch		1 add 2 div customsize mul cvi exch		customsize mul add		customdata load exch get 256 div	} setscreen} def/customdata2 28 28 mul string defcurrentfile customdata2 readhexstring4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECDF3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD044483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CFF0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata3 28 28 mul string defcurrentfile customdata3 readhexstring011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F688AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A125998DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A479336B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A177306989C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A115897DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A336C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB4800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata4 28 28 mul string defcurrentfile customdata4 readhexstring1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A32C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4CC38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata5 28 28 mul string defcurrentfile customdata5 readhexstring010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B112654A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A9937047334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E092351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B07204EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C29E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9FDAF3E2BA681C07214FA0DBF5E1B8671A000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata6 28 28 mul string defcurrentfile customdata6 readhexstring081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A8190ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BDE4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B04071943B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B4864798091AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BEE4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A03061842B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC452280100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop pop/customdata7 28 28 mul string defcurrentfile customdata7 readhexstring01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F05122953A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D73372318253A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CEECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D33161E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E4350657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C220D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F64798499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F360E04112952A5CFEDFAF0DBB25E350Epop pop/customdata8 28 28 mul string defcurrentfile customdata8 readhexstring050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F132939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634BB8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADAF0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFCFFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB96775131210B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000pop popendenddefaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginResource: procset Adobe_blend_AI5 1.4 0%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)%%Version: 1.4 0%%CreationDate: (11/19/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_blend_AI5 70 dict dup beginput/bd{	bind def} bind def/xs{	exch store} bd/nullProc{	{	}} def/initialize{	pop pop	Adobe_blend_AI5 begin		Adobe_blend_AI5_vars begin			/_contoneDevice where			{				pop			}			{				/_contoneDevice false def				} ifelse								/_dpiThreshold where			{				pop			}			{					/_dpiThreshold 600 def			} ifelse						/_screenFreqThreshold where			{				pop			}			{					/_screenFreqThreshold 150 def			} ifelse						/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def	/invertXfer	{		[		{			1 exch sub				} /exec load systemdict/currenttransfer get exec /exec load				] cvx systemdict/settransfer get exec			} bd			/spotDict 3 dict dup begin				/nSpots 2 def				/spot1 7 dict def				/spot2 7 dict def		 end			def			composite?			{				/_setgray_ /setgray load def				/_fill_ /fill load def				/_image_ /image load def			}			{				/_setgray_ systemdict/setgray get def				/_fill_ systemdict/fill get def				/_image_ systemdict/image get def			} ifelse		} bd		/terminate		{			currentdict Adobe_blend_AI5_vars eq			{		 end			currentdict Adobe_blend_AI5 eq			{		 end		} if	} if} bd/_compositeSpotDevice where{ begin		_compositeSpotDevice 0 ne {userdict /composite? true put} if end}{	/_compositeSpotDevice 0 def	} ifelse	/nullString () def/d255 256 array def0 1 255{	d255 exch dup 255 div put} bind for/d255- 256 array def0 1 255{	d255- exch 1 d255 2 index get sub put} bind for/dUserSpace matrix defaultmatrix defcurrentdict /Adobe_blend_AI5_vars 89 dict dup beginput{	/f /F /s /S /b /B}{	null def} bind forall/byte 1 string def/sSave null def/setSSave{	save /sSave exch store} bind def/Bm null def/doBlend null def/startC? false def/endC? false def/fCMYK? null def/startTint 0 def/endTint 0 def/bSMatrix matrix def/bUMatrix matrix def/dMatrix matrix def/inLine? true def/pTState? false def/bHi? false def/yHi 0 def/xHi 0 def/noImg /lv1Fix where{	pop lv1Fix}{	false} ifelsedef/ccAry1 5 array def/ccTint 0 def/spotColor? false def/colorimage? true def[/tint1Data/tint2Data/spotDict/bAxis/ubAxis/pChange/optimize?/nSamples/sInc/blendProc/_bn/xBCInc/yBCInc/bInc/bRender/cBName/cBType/nColors/color?/blend?/colorType/cData/cDataLen/bDataLen/rampPoint/midPoint/endPoint/blendLength/blackData/yeData/mgData/cyData/cnt1/ndx/_fill/tmpcounttomark{	null def} bindrepeatpopcurrentdictendcurrentdictendexchbeginbegin/unitSq{	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath} bd/gMark{	counttomark 2 add -1 roll} bd/setCustomColor{	dup /ccTint exch store	1 exch sub 6 1 roll	ccAry1 astore	exch setcustomcolor} bd/currentCustomColor{	ccAry1 aload pop ccTint} bd/nsetcustomcolor where {	pop}{	/nsetcustomcolor	{		pop setcmykcolor		} bd} ifelse/nsetcustomcolorend where {	pop}{	/nsetcustomcolorend	{	} bd} ifelse/setBSpace{	newpath bUMatrix astore concat unitSq} bd/setCStop{	dup 0 eq	{		pop				spotColor?			{			dup 1 exch sub /ccTint exch def			ccAry1 4 /Black put			} if		setgray	}	{		1 eq		{			setcmykcolor		}		{			composite? not colorType 2 lt and			{				forceCMYK			}			{				setCustomColor			} ifelse		} ifelse	} ifelse} bd/makeByte{	/tmp 0 store	255 mul cvi	8 string 8	{		dup tmp 3 index put /tmp tmp 1 add store	} repeat	exch pop} bd/setImgSpace{	cDataLen 1 8	2 index 0 0 1 0 0 dMatrix astore} bd/bwImage{	setImgSpace cData /_image_ load	{		exec	} stopped	{		$error /errorname get /undefinedresult ne		{			stop		}		{			pop pop pop pop pop		} ifelse	} if} bdlevel2?{	/bFill	{		_fill	} def	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		expandCMYK		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd} if/expandOne{			dup type /stringtype ne			{				cDataLen string				exch				dup 0 ne				{					255 mul cvi					0 1 cDataLen 1 sub					{						3 copy						exch put pop					} for				} if				pop			} if} bd/expandSpot{	spotColor?	{		spotDict begin			spot1 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end			spot2 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end	 end	} if} bd/expandCMYK{	4	{		expandOne 4 1 roll	} repeat} bd/colorimage where dup{	exch pop		/ncolorimage where	{		pop	}	{		/ncolorimage {pop colorimage} bd	} ifelse} ifnot{	/ncolorimage where 	{		pop	}	{		/colorimage? false store		/ncolorimage		{			pop pop pop			setSSave		/blackData xs		/yeData xs		/mgData xs		/cyData xs		/cnt1 0 store		[		byte dup 0		cyData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx		}		{			.3 mul		} ifelse		mgData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx		}		{			.59 mul		} ifelse		yeData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx		}		{			.11 mul		} ifelse		blackData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx		} if		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/dup cvx 1 /gt cvx		{			pop 1		} /if cvx		255 /mul cvx /cvi cvx		256 /mod cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/put cvx		/cnt1 dup cvx 1 /add cvx /store cvx		] cvx		bind			_image_ 		sSave restore	} bd	} ifelse} iflevel2? not{	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		colorimage? 		{			expandCMYK		} if		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bwFill	{		setSSave		/cDataLen 8 store		/cData currentgray makeByte store		bwImage		sSave restore	} bd	/c1ImgFill	{		setSSave		/cDataLen 8 store		setImgSpace		spotColor?		{			spotDict begin				spot1 begin					currentCustomColor makeByte /tintImage exch def					/name exch def					/spot_K exch def					/spot_Y exch def					/spot_M exch def					/spot_C exch def			 end				spot2 initSpotData		 end		} if		currentcmykcolor		4		{			makeByte 4 1 roll		} repeat		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bFill	noImg	{		{			_fill		}	}	{		{			color?			{				c1ImgFill			}			{				bwFill			} ifelse		}	} ifelse	bd} ifcomposite?{	/bCFun	{		color?		{			cyData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			mgData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			yeData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			cData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			spotColor?			{				spotDict begin					/spotDict cvx /begin cvx					spot1 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx					spot2 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/spotDict cvx				/nsetcustomcolor cvx			}			{				/setcmykcolor cvx			} ifelse		}		{			cData /ndx cvx /get cvx			d255 /exch cvx /get cvx			/setgray cvx		} ifelse	} bd	/Bc	{		newpath		gsave		setBSpace		nColors 1 eq		{			pop pop			setCStop		} if		bFill		grestore	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			linImg		}		{			bFill		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/rdBm	{		/nColors dup load 1 sub store		_fill		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			_fill			blend? bHi? or			{				rdBlend			} if			nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/cGetRData	{		setCStop		/blend?		cData type /stringtype eq		dup not color? and		{			pop			cyData type /stringtype eq			mgData type /stringtype eq			yeData type /stringtype eq			or or		} if		store	} def	/cGetRData} if/eCStop{	mark	1 index 3 mul 3 add dup 8 gt	{		pop 8	} if	1 roll	cleartomark} bdcomposite? not{	/knockOut	level2?	{		{			0 0 0 0 setcmykcolor _fill		}	}	{		/bFill noImg		{			{				_fill			}		}		{			{				_of true eq				{					currentgray 1 ne					{						bwFill					} if				}				{					bwFill				} ifelse			}		} ifelse		def		/whiteByte 1 makeByte def		noImg		{			{				0 0 0 0 setcmykcolor _fill			}		}		{			{				cBType 0 eq				{					setSSave					/cData whiteByte store					/cDataLen 8 store					bwImage					sSave restore				}				{					_fill				} ifelse			}		} ifelse	} ifelse	bd	/bCFun	{		cData dup type /stringtype ne		{			color?			{				1 exch sub			} if		}		{			/ndx cvx /get cvx			color? customColor? not and			{				d255-			}			{				d255			} ifelse			/exch cvx /get cvx		} ifelse		/_setgray_ cvx	} bd	/eCCBlend	{		dup 3 eq		{			pop			mark 7 1 roll			6 copy ccThrough? dup /blend? xs			{				/startC? true store				setCustomColor				customColor?				{					/cData tint1Data store					setCDataLen				} if				/endC?				3 index 3 eq				{					4 index 1 ne				}				{					false				} ifelse				store			} if			cleartomark			stop		} if		1 eq		{			pop pop pop		} if		pop		/startC? false store		6		{			8 index		} repeat		ccThrough? dup /blend? xs		{			/endC? true store			blend? not			{				stop			} if			customColor?			{				/cData tint1Data store				setCDataLen			} if		} if	} bd	/handleOP	{		_of not		{			knockOut		} if	} bd	/handleROP	{		_of not		{			0 0 0 0 setcmykcolor _fill		}		{			newpath			} ifelse	} bd	/rdBm	{		/nColors dup load 1 sub store		blend? 		{			_fill		}		{			handleROP		} ifelse		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			blend?			{				cData type /stringtype ne bHi? not and				{					cData color?					{						1 exch sub					} if					_setgray_ 					_fill_ 				}				{					cData type /stringtype ne					{						/cDataLen 1 store						/bDataLen 1 store					} if					rdBlend				} ifelse			}			{								handleROP								pTState?				{					/bAxis rampPoint endPoint sub store					xHi bAxis mul yHi bAxis mul translate				} if			} ifelse							nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/ccThrough?	{		gsave		pop 0 setCustomColor		currentcmykcolor		grestore		anyColor?	} bd	/forceCMYK	{		exch pop		1 exch sub 5 1 roll		4		{			4 index mul 4 1 roll		} repeat		0		cCMYKData dup /cData ne		{			dup /yeData eq			{				pop 1 add			}			{				/mgData eq				{					2				}				{					3				} ifelse				add			} ifelse			0		} if		pop		index		0 eq		{			pop pop pop pop 0 0 0 0		} if		setcmykcolor		pop		/fCMYK? true store	} bd	/endCapSepBc	{		pop pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				colorType 1 eq				{					forceCMYK				}				{					fCMYK?					{						forceCMYK					}					{						setCustomColor					} ifelse				} ifelse			} ifelse		} ifelse		currentcmykcolor anyColor? 		blend? and		{			bFill		}		{			handleOP		} ifelse			} bd} if/cCMYKData 0 defcomposite? dup not{	pop customColor?} ifnot{	/cCMYKData	/cyData /mgData /yeData /cData	black? not	{		yellow?		{			exch		}		{			magenta?			{				3			}			{				4			} ifelse			-1 roll		} ifelse	} if	4 1 roll pop pop pop	store	/Bc	{		gsave		setBSpace		nColors 1 gt		{						blend? currentcmykcolor anyColor? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cCMYKData load dup type /stringtype eq			{				dup length /cDataLen xs				/cData xs				gsave				colorType 0 ne noImg not and				{					invertXfer				} if				linImg				grestore			}			{				pop bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/cmykGetRData	{		/fCMYK? false store		blend?		{			{				cmykDataProcs colorType get exec			} stopped			pop			blend?			{				/cData cCMYKData load store				setCDataLen			} if		} if	} def	/cmykDataProcs	[	{		pop		black? dup /blend? xs		{			setgray			0		} if		pop	}	{		cCMYKData load dup type /stringtype ne		{			0 0 0			cyan? not			{				4 magenta?				{					1				}				{					yellow?					{						2					}					{						3					} ifelse				} ifelse				roll			} if			4 copy add add add 0 eq			{				/blend? false store			} if						setcmykcolor			/startC? true store			/endC? true store			eCStop			stop		} if		pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				forceCMYK			} ifelse		} ifelse	} bind	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			black?			{				setgray			}			{				0 0 0 4 -1 roll 1 exch sub setcmykcolor			} ifelse			black?			{				/blend? true store			} if			6			{				8 index			} repeat			ccThrough?			{				/blend? true store			}			{				black?				{					/cData tint1Data store					setCDataLen				}				{					/blend? false store				} ifelse			} ifelse		}		{			mark 7 1 roll			6 copy ccThrough?			{				forceCMYK				pop				stop			} if			9 index 0 eq			{				black? dup /blend? xs				{					pop 1 setgray					/cData tint2Data store					setCDataLen					0				} if				pop			}			{				/blend?				6				{					16 index				} repeat				ccThrough?				store				blend?				{					forceCMYK				} if			} ifelse			cleartomark		} ifelse	} bind	] def	/cmykGetRData} ifcomposite? dup not{	pop isCMYKSep?} ifnot{	/endCapSepBc	{		/white? false store		pop pop		dup 0 eq		{			pop			/white? 1 index 1 eq store			setgray		}		{			1 eq			{				setcmykcolor			}			{				setCustomColor			} ifelse		} ifelse%		currentcmykcolor anyColor?		endC? or		blend? and		{			bFill		}		{			handleOP		} ifelse	} bd	/Bc	{		gsave		setBSpace		nColors 1 gt		{			blend? startC? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cData type /stringtype eq			{				linImg			}			{				bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/discardCMY	{		counttomark 4 add -3 roll pop pop pop	} bd	/testTopCC	{		6 copy ccThrough?	} bd	/getCRamp	{		{			ccDataProcs colorType 2 sub get exec		} stopped pop		blend? cDataLen 0 eq and		{			/cDataLen bDataLen store		} if	} bd	/ccGetRData	{		/fCMYK? false store		/startC? false store		/endC? false store		colorType 2 lt		{			/blend? false def		} if		blend?		{			getCRamp		}		{			setCStop		} ifelse		blend?		{			/blend? cData 1 ne store			blend?			{				cData dup type /stringtype ne				{					1 exch sub /cData xs 0				} if				pop			} if		} if	} def	/ccDataProcs	[	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			/blend? false store			pop		}		{			mark 7 1 roll			testTopCC			{				/blend? 1 index 1 ne store				/startC? blend? store				/endC? false store				blend? not				{					cleartomark stop				} if				/cData tint1Data store				setCDataLen				setCustomColor				pop				stop			} if			cleartomark		} ifelse		2 index 0 eq		{			/blend? false store		}		{			mark 6			{				9 index			} repeat			testTopCC dup /blend? xs			{				/blend? 1 index 1 ne store				/endC? blend? store				/startC? false store				blend? not				{					cleartomark stop				} if				/cData tint2Data store				setCDataLen			} if			cleartomark		} ifelse	} bind	] def	/ccGetRData} ifload Adobe_blend_AI5_vars /getData 3 -1 roll put/setCDataLen{	/cDataLen 0 cData dup type /stringtype eq	{		length exch	} if	pop store} bd/initSpotData{ begin		/name null def		/tintImage null def		/tintValue null def		/spot_C  null def		/spot_M  null def		/spot_Y  null def		/spot_K  null def end} bd/getRData{	/colorType gMark store	_compositeSpotDevice 0 ne	{		spotDict begin			spot1 initSpotData			spot2 initSpotData	 end		/spotColor? colorType 2 eq colorType 3 eq or def	} 	{		/spotColor? false store	} ifelse	/blend? true store	0 0 0 0 setcmykcolor	100 div /rampPoint xs% (between 13 and 87%) 	100 div /midPoint xs	dup 0 eq	{		2	}	{		dup 1 eq		{			5		}		{			_compositeSpotDevice 0 ne			{				spotDict begin					spot1 begin						/name 3 index def						/spot_K 4 index def						/spot_Y 5 index def						/spot_M 6 index def						/spot_C 7 index def				 end			 end			} if			7		} ifelse	} ifelse	/tmp exch def	tmp index 100 div /endPoint xs	_compositeSpotDevice 0 ne	{		tmp 2 add index 3 eq		{			/tmp tmp 4 add def			tmp index dup 			spotDict begin				spot1/name get ne				{					spot2 begin						/name exch def						/spot_K tmp 2 add index def						/spot_Y tmp 3 add index def						/spot_M tmp 4 add index def						/spot_C tmp 5 add index def				 end				}				{					pop				} ifelse		 end		} if	} if	/color? colorType 0 gt store		colorType 3 eq	{		/tint2Data gMark store	} if		colorType 2 ge	{		/tint1Data gMark store	} if	_compositeSpotDevice 0 ne	{		spotDict begin					colorType 2 ge			{				colorType 3 eq				{					spot2 begin						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def						name null eq {/name /Black def} if				 end				} if				spot1 begin					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def					colorType 2 eq 					{						name null eq 						{							/name spot2/name get def							spot2/name null put						} if					}					{						name null eq {/name /Black def} if					} ifelse			 end			} if	 end	} if		/cData gMark store	setCDataLen	colorType 0 gt	{		counttomark 4 add -3 roll		/yeData xs		/mgData xs		/cyData xs	} if	blend?	{		/bDataLen		cDataLen dup 0 eq color? and		{			[			cyData mgData yeData			]			{				dup type /stringtype eq				{					length exch pop exit				} if				pop			} forall		} if		store		bDataLen 0 eq		{			/bDataLen 1 store		} if		getData		blend?		{			composite? cDataLen 0 eq and			{				/cDataLen bDataLen store			} if		} if	}	{		setCStop	} ifelse} bd/Bg{	0 0 0 0 setcmykcolor	6	{		pop	} repeat	/blendLength xs	pop pop pop	/cBName xs	/bRender xs	bRender 2 ne	{		composite? not		{			_of setoverprint		} if		_eo {eoclip} {clip} ifelse		_bn cBName 2 copy known		{			get			mark exch aload pop			/cBType xs			/nColors xs			mark exch aload pop			0 0		} if		pop pop		getRData		cBType 0 eq		{			/linealBm		}		{			bHi?			{				/pTState? nColors 2 gt store			} if			/doBlend /rdBlend load store			/rdBm		} ifelse	}	{		inLine? not		{			mark mark		} if		/Bc dup		{			cleartomark mark		} bd		/nullProc	} ifelse	load /Bm xs} bd/linImgnoImg{	{		newpath doRctBlend	}}{	{		/doBlend		color? composite? and		{			/bCImg		}		{			/bwImage		} ifelse		load		store			0 0 moveto		tRectOK? composite? and		{			{				mark				0 1 dtransform atan cvi 90 mod 0 eq				1 0 dtransform atan cvi 90 mod 0 eq			} stopped			{				cleartomark			}			{				and exch pop				{					newpath					doRctBlend				}				{					doBlend				} ifelse			} ifelse		}		{			doBlend		} ifelse	} } ifelsebd/doRctBlend{	gsave	/sInc 1 store	/nSamples bDataLen store	/bInc 1 bDataLen div store	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store	/pChange ubAxis 0 eq	{		0	}	{		bDataLen ubAxis div	} ifelse	store	pChange .5 gt noImg not and dup /optimize? xs	{		/nSamples ubAxis 2 div round cvi dup 1 le		{			pop 2		} if		store		/bInc 1 nSamples div store		/sInc bDataLen 1 sub nSamples 1 sub div store	} if	0	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	/rectfill where dup	{		exch pop _compositeSpotDevice 1 ne and	} if	{		0 0 bInc 1 /rectfill cvx		}	{		0 0 /moveto cvx		bInc 0 /lineto cvx		bInc 1 /lineto cvx		0 1 /lineto cvx		/closepath cvx		/_fill_ cvx	} ifelse	bInc 0 /translate cvx	sInc /add cvx	] cvx	bind	repeat	pop	spotColor? {nsetcustomcolorend} if		grestore} bd/rdPrep{	/nSamples bDataLen dup 0 eq	{		pop 1	} if	store	/sInc -1 store	/bAxis rampPoint endPoint sub store	/bInc bAxis bDataLen div neg store	/optimize? false store	tRectOK?	{		/ubAxis		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		2 copy lt		{			exch		} if		pop store		/pChange ubAxis 0 eq		{			0		}		{			bDataLen ubAxis div		} ifelse		store		pChange .5 gt noImg not and dup /optimize? xs		{			/nSamples ubAxis 2 div round cvi dup 1 le			{				pop 2			} if			store			/bInc bAxis nSamples div neg store			/sInc bDataLen 1 sub nSamples 1 sub div neg store		} if	} if	bHi?	{		/xBCInc xHi bAxis mul nSamples div store		/yBCInc yHi bAxis mul nSamples div store	} if} bd/rdBlend{	newpath	gsave	rdPrep	rampPoint	bDataLen 1 sub	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx	/exch cvx bInc /add cvx /exch cvx	sInc /add cvx	bHi?	{		xBCInc yBCInc /translate cvx	} if	] cvx	bind	repeat	pop pop	spotColor? {nsetcustomcolorend} if	grestore	pTState?	{		xHi bAxis mul yHi bAxis mul translate	} if} bd/Bh{	pop pop	/pTState? false store	2 copy 0 ne exch 0 ne or dup /bHi? xs	{		/yHi xs		/xHi xs		0 0	} if	pop pop} bd/BD{	inLine? not	{		] nColors cBType		] _bn cBName 3 -1 roll put end} if} bd/Bn{1 add dictdup nullString null put/_bn xs} bd/Bd{Adobe_blend_AI5_vars begin	3 -1 roll dup nullString eq dup	{		setSSave	} if	/inLine? exch def	/cBName exch def	/nColors exch def	/cBType exch def} bd/Bb{	sSave null eq	{		Adobe_blend_AI5_vars begin		setSSave	} if	composite?	{		/_fill /fill load store	}	{		/__fill /fill load store			/_fill			{				_of true eq				{					currentgray 1 ne					{						__fill					} if				}				{					__fill				} ifelse			} def	} ifelse	/fill	{	} def	} bd	/BB	{	/cBType xs	cleartomark cleartomark	cBType dup	bRender	sSave dup type /savetype eq	{		restore 0	} if	pop	currentdict Adobe_blend_AI5_vars eq	{	 end	} if	2 ne exch 0 gt and	{		2 eq		{			s		}		{			S		} ifelse	}	{		pop newpath	} ifelse} bdcurrentdict readonly popendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 17 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin		/initialize	{ 		Adobe_ColorImage_AI6 begin		Adobe_ColorImage_AI6		{			dup type /arraytype eq			{				dup xcheck				{					bind				} if			} if			pop pop		} forall	} def	/terminate { end } def		currentdict /Adobe_ColorImage_AI6_Vars known not	{		/Adobe_ColorImage_AI6_Vars 14 dict def	} if		Adobe_ColorImage_AI6_Vars begin		/channelcount 0 def		/sourcecount 0 def		/sourcearray 4 array def		/plateindex -1 def		/XIMask 0 def		/XIBinary 0 def		/XIChannelCount 0 def		/XIBitsPerPixel 0 def		/XIImageHeight 0 def		/XIImageWidth 0 def		/XIImageMatrix null def		/XIBuffer null def		/XIDataProc null def end		/WalkRGBString null def	/WalkCMYKString null def		/StuffRGBIntoGrayString null def	/RGBToGrayImageProc null def	/StuffCMYKIntoGrayString null def	/CMYKToGrayImageProc null def	/ColorImageCompositeEmulator null def		/SeparateCMYKImageProc null def		/FourEqual null def	/TestPlateIndex null def		currentdict /_colorimage known not	{		/colorimage where		{			/colorimage get /_colorimage exch def		}		{			/_colorimage null def		} ifelse	} if		/_currenttransfer systemdict /currenttransfer get def		/colorimage null def	/XI null def			/WalkRGBString	{		0 3 index			dup length 1 sub 0 3 3 -1 roll		{			3 getinterval { } forall				5 index exec				3 index		} for				 5 { pop } repeat		} def			/WalkCMYKString	{		0 3 index			dup length 1 sub 0 4 3 -1 roll		{			4 getinterval { } forall						6 index exec						3 index					} for				5 { pop } repeat			} def			/StuffRGBIntoGrayString	{		.11 mul exch				.59 mul add exch				.3 mul add				cvi 3 copy put				pop 1 add	} def			/RGBToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin 			sourcearray 0 get exec			dup length 3 idiv string			dup 3 1 roll 						/StuffRGBIntoGrayString load exch			WalkRGBString	 end	} def			/StuffCMYKIntoGrayString	{		exch .11 mul add				exch .59 mul add				exch .3 mul add				dup 255 gt { pop 255 } if				255 exch sub cvi 3 copy put				pop 1 add	} def			/CMYKToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin			sourcearray 0 get exec			dup length 4 idiv string			dup 3 1 roll 						/StuffCMYKIntoGrayString load exch			WalkCMYKString	 end	} def			/ColorImageCompositeEmulator	{		pop true eq		{			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat		}		{			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne			{				Adobe_ColorImage_AI6_Vars begin					sourcearray 0 3 -1 roll put									channelcount 3 eq 					{ 						/RGBToGrayImageProc 					}					{ 						/CMYKToGrayImageProc					} ifelse					load			 end			} if			image		} ifelse	} def			/SeparateCMYKImageProc	{			Adobe_ColorImage_AI6_Vars begin				sourcecount 0 ne			{				sourcearray plateindex get exec			}			{							sourcearray 0 get exec								dup length 4 idiv string								0 2 index								plateindex 4 2 index length 1 sub				{					get 255 exch sub										3 copy put pop 1 add										2 index				} for					pop pop exch pop			} ifelse	 end	} def				/FourEqual	{		4 index ne		{			pop pop pop false		}		{			4 index ne			{				pop pop false			}			{				4 index ne				{					pop false				}				{					4 index eq				} ifelse			} ifelse		} ifelse	} def			/TestPlateIndex	{		Adobe_ColorImage_AI6_Vars begin			/plateindex -1 def				/setcmykcolor where			{				pop				gsave				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub				grestore					1 0 0 0 FourEqual 				{ 					/plateindex 0 def				}				{					0 1 0 0 FourEqual					{ 						/plateindex 1 def					}					{						0 0 1 0 FourEqual						{							/plateindex 2 def						}						{							0 0 0 1 FourEqual							{ 								/plateindex 3 def							}							{								0 0 0 0 FourEqual								{									/plateindex 5 def								} if							} ifelse						} ifelse					} ifelse				} ifelse				pop pop pop pop			} if			plateindex	 end	} def			/colorimage	{		Adobe_ColorImage_AI6_Vars begin			/channelcount 1 index def			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def				4 sourcecount add index dup 			8 eq exch 1 eq or not	 end				{			/_colorimage load null ne			{				_colorimage			}			{				Adobe_ColorImage_AI6_Vars /sourcecount get				7 add { pop } repeat			} ifelse		}		{			dup 3 eq			TestPlateIndex			dup -1 eq exch 5 eq or or			{				/_colorimage load null eq				{					ColorImageCompositeEmulator				}				{					dup 1 eq					{						pop pop image					}					{						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							gsave														0 _currenttransfer exec							1 _currenttransfer exec							eq							{ 0 _currenttransfer exec 0.5 lt }							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse														{ { pop 0 } } { { pop 1 } } ifelse							systemdict /settransfer get exec						} if												_colorimage												Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							grestore						} if					} ifelse				} ifelse			}			{				dup 1 eq				{					pop pop					image				}				{					pop pop						Adobe_ColorImage_AI6_Vars begin						sourcecount -1 0						{										exch sourcearray 3 1 roll put						} for							/SeparateCMYKImageProc load				 end						systemdict /image get exec				} ifelse			} ifelse		} ifelse	} def		/XI	{		Adobe_ColorImage_AI6_Vars begin			gsave			/XIMask exch 0 ne def			/XIBinary exch 0 ne def			pop			pop			/XIChannelCount exch def			/XIBitsPerPixel exch def			/XIImageHeight exch def			/XIImageWidth exch def			pop pop pop pop			/XIImageMatrix exch def						XIBitsPerPixel 1 eq			{				XIImageWidth 8 div ceiling cvi			}			{				XIImageWidth XIChannelCount mul			} ifelse			/XIBuffer exch string def						XIBinary			{				/XIDataProc { currentfile XIBuffer readstring pop } def				currentfile 128 string readline pop pop			}			{				/XIDataProc { currentfile XIBuffer readhexstring pop } def			} ifelse						0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale						XIMask			{				XIImageWidth XIImageHeight				false				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								/_lp /null ddef				_fc				/_lp /imagemask ddef								imagemask			}			{				XIImageWidth XIImageHeight				XIBitsPerPixel				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								XIChannelCount 1 eq				{										gsave					0 setgray										image										grestore				}				{					false					XIChannelCount					colorimage				} ifelse			} ifelse			grestore	 end	} def	end%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 %%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Symbol%%IncludeFont: Times-BoldAdobe_level2_AI5 /initialize get execAdobe_screens_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Symbol Symbol[/_Symbol/Symbol 0 0 0 TZ%AI3_EndEncoding TrueType%AI3_BeginEncoding: _Times-Bold Times-Bold[/_Times-Bold/Times-Bold 0 0 1 TZ%AI3_EndEncoding TrueType%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Bricks)(Bricks) 2.565 5.19 74.565 77.19 [(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @_ &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D0 XR1.6 73.6 m75.6 73.6 lS1.6 66.399 m75.6 66.399 LS1.6 59.199 m75.6 59.199 LS1.6 51.998 m75.6 51.998 LS1.6 44.798 m75.6 44.798 LS1.6 37.597 m75.6 37.597 LS1.6 30.397 m75.6 30.397 LS1.6 23.196 m75.6 23.196 LS1.6 15.996 m75.6 15.996 LS1.6 8.796 m75.6 8.796 LS70.975 73.6 m70.975 66.412 lS56.575 73.6 m56.575 66.412 LS42.175 73.6 m42.175 66.412 LS27.775 73.6 m27.775 66.412 LS13.375 73.6 m13.375 66.412 LS70.975 59.162 m70.975 51.975 lS56.575 59.162 m56.575 51.975 LS42.175 59.162 m42.175 51.975 LS27.775 59.162 m27.775 51.975 LS13.375 59.162 m13.375 51.975 LS70.975 44.787 m70.975 37.6 lS56.575 44.787 m56.575 37.6 LS42.175 44.787 m42.175 37.6 LS27.775 44.787 m27.775 37.6 LS13.375 44.787 m13.375 37.6 LS70.975 30.412 m70.975 23.225 lS56.575 30.412 m56.575 23.225 LS42.175 30.412 m42.175 23.225 LS27.775 30.412 m27.775 23.225 LS13.375 30.412 m13.375 23.225 LS70.975 15.975 m70.975 8.787 lS56.575 15.975 m56.575 8.787 LS42.175 15.975 m42.175 8.787 LS27.775 15.975 m27.775 8.787 LS13.375 15.975 m13.375 8.787 LS63.762 8.787 m63.762 1.6 LS49.362 8.787 m49.362 1.6 LS34.962 8.787 m34.962 1.6 LS20.562 8.787 m20.562 1.6 LS6.162 8.787 m6.162 1.6 lS63.762 23.225 m63.762 16.037 LS49.362 23.225 m49.362 16.037 LS34.962 23.225 m34.962 16.037 LS20.562 23.225 m20.562 16.037 LS6.162 23.225 m6.162 16.037 lS63.762 37.6 m63.762 30.412 LS49.362 37.6 m49.362 30.412 LS20.562 37.6 m20.562 30.412 LS6.162 37.6 m6.162 30.412 lS63.762 51.975 m63.762 44.787 LS49.362 51.975 m49.362 44.787 LS34.962 51.975 m34.962 44.787 LS20.562 51.975 m20.562 44.787 LS6.162 51.975 m6.162 44.787 lS63.762 66.412 m63.762 59.225 LS49.362 66.412 m49.362 59.225 LS34.962 66.412 m34.962 59.225 LS20.562 66.412 m20.562 59.225 LS6.162 66.412 m6.162 59.225 lS63.762 80.849 m63.762 73.662 LS49.362 80.849 m49.362 73.662 LS34.962 80.849 m34.962 73.662 LS20.562 80.849 m20.562 73.662 LS6.162 80.849 m6.162 73.662 lS34.962 37.6 m34.962 30.412 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Checks)(Checks) 4.8 4.8 35.1995 35.1995 [(0 O 0 R 0 0.9 1 0 (Saturn Red) 0 x 0 0.9 1 0 (Saturn Red) 0 X) @_ &(0 O 0 R 0 0.25 1 0 (Orange Yellow) 0.8 x 0 0.25 1 0 (Orange Yellow) 0.8 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR16.1995 1 m16.1995 8.6 L8.6 8.6 L8.6 1 L16.1995 1 Lf12.3995 4.8 mF1 8.6 m1 16.1995 L8.6 16.1995 L8.6 8.6 L1 8.6 Lf4.8 12.3995 mF31.3995 1 m31.3995 8.6 L23.7995 8.6 L23.7995 1 L31.3995 1 Lf27.5995 4.8 mF16.1995 8.6 m16.1995 16.1995 L23.7995 16.1995 L23.7995 8.6 L16.1995 8.6 Lf19.9995 12.3995 mF31.3995 8.6 m31.3995 16.1995 L38.9995 16.1995 L38.9995 8.6 L31.3995 8.6 Lf35.1995 12.3995 mF16.1995 16.1995 m16.1995 23.7995 L8.6 23.7995 L8.6 16.1995 L16.1995 16.1995 Lf12.3995 19.9995 mF1 23.7995 m1 31.3995 L8.6 31.3995 L8.6 23.7995 L1 23.7995 Lf4.8 27.5995 mF31.3995 16.1995 m31.3995 23.7995 L23.7995 23.7995 L23.7995 16.1995 L31.3995 16.1995 Lf27.5995 19.9995 mF16.1995 23.7995 m16.1995 31.3995 L23.7995 31.3995 L23.7995 23.7995 L16.1995 23.7995 Lf19.9995 27.5995 mF31.3995 23.7995 m31.3995 31.3995 L38.9995 31.3995 L38.9995 23.7995 L31.3995 23.7995 Lf35.1995 27.5995 mF16.1995 31.3995 m16.1995 38.9995 L8.6 38.9995 L8.6 31.3995 L16.1995 31.3995 Lf12.3995 35.1995 mF31.3995 31.3995 m31.3995 38.9995 L23.7995 38.9995 L23.7995 31.3995 L31.3995 31.3995 Lf27.5995 35.1995 mF%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Confetti)(Confetti) 4.85 3.617 76.85 75.617 [(0 O 0 R 1 g 1 G) @_ &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (DblLine1.2.outer)(DblLine1.2.outer) 1 1.0003 39.2706 39.271 [%AI3_Tile(0 O 0 R 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 x 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR39.2708 26.6602 m13.6111 26.6602 L13.6111 1.0005 L22.1751 1 L22.1751 18.096 L39.2708 18.096 L39.2708 26.6602 Lf1003.2397 w39.2708 15.578 m24.6928 15.578 L24.6928 1 L25.367 1 L25.367 14.9038 L39.2708 14.9038 L39.2708 15.578 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Diamonds)(Diamonds) 7.0312 11.2349 43.2176 52.1757 [(0 O 0 R 0.2 0 1 0 (Yellow Green) 0 x 0.2 0 1 0 (Yellow Green) 0 X) @_ &(0 O 0 R 0.75 0.9 0 0 (Violet Blue) 0 x 0.75 0.9 0 0 (Violet Blue) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.5 w 4 M []0 d%AI3_Note:0 D0 XR49.2489 11.2349 m43.2176 21.4698 L37.1864 11.2349 L43.217 1 L49.2489 11.2349 Lf37.1864 11.2349 m31.1551 21.4698 L25.1244 11.2349 L31.1551 1 L37.1864 11.2349 Lf25.1244 11.2349 m19.0932 21.4698 L13.0619 11.2349 L19.0932 1 L25.1244 11.2349 Lf13.0619 11.2349 m7.0312 21.4698 L1 11.2349 L7.0312 1 L13.0619 11.2349 Lf49.2489 31.7053 m43.2176 41.9408 L37.1864 31.7053 L43.217 21.4698 L49.2489 31.7053 Lf37.1864 31.7053 m31.1551 41.9408 L25.1244 31.7053 L31.1551 21.4698 L37.1864 31.7053 Lf25.1244 31.7053 m19.0932 41.9408 L13.0619 31.7053 L19.0932 21.4698 L25.1244 31.7053 Lf13.0619 31.7053 m7.0312 41.9408 L1 31.7053 L7.0312 21.4698 L13.0619 31.7053 Lf49.2489 52.1751 m43.2176 62.4112 L37.1864 52.1751 L43.217 41.9408 L49.2489 52.1751 Lf37.1864 52.1751 m31.1551 62.4112 L25.1244 52.1751 L31.1551 41.9408 L37.1864 52.1751 Lf25.1244 52.1751 m19.0932 62.4112 L13.0619 52.1751 L19.0932 41.9408 L25.1244 52.1751 Lf13.0619 52.1751 m7.0312 62.4112 L1 52.1751 L7.0312 41.9408 L13.0619 52.1751 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Laurel.inner)(Laurel.inner) 1 1 28.5392 28.5392 [%AI3_Tile(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x 0 0.55 1 0.12 (\245Laurel.color2) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR19.2768 15.3585 m28.9144 15.3585 L28.9144 14.2335 L19.2768 14.2335 L19.2768 15.3585 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x 0 0.55 1 0.3 (\245Laurel.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR14.7461 18.9624 m13.0264 17.8486 11.3273 14.4193 11.3273 10.0362 c11.3273 5.6547 12.9768 2.1518 14.744 1.1112 C14.7443 1.1112 L16.4707 2.1518 18.1679 5.6547 18.1679 10.0362 c18.1679 14.4143 16.432 17.8633 14.7461 18.9624 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Laurel.outer)(Laurel.outer) 1 1.3751 28.5393 28.9143 [%AI3_Tile(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x 0 0.55 1 0.12 (\245Laurel.color2) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR14.2395 10.6375 m14.2395 1 L15.3645 1 L15.3645 10.6375 L14.2395 10.6375 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x 0 0.55 1 0.3 (\245Laurel.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR10.5769 15.124 m11.6906 16.8438 15.1198 18.5429 19.503 18.5429 c23.8844 18.5429 27.3874 16.8935 28.428 15.1262 C28.428 15.1259 L27.3874 13.3995 23.8844 11.7023 19.503 11.7023 c15.1249 11.7023 11.676 13.4382 10.5769 15.124 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Laurel.side)(Laurel.side) 1.3972 1 28.9364 28.5392 [%AI3_Tile(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x 0 0.55 1 0.12 (\245Laurel.color2) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR29.1571 15.2998 m1 15.2998 L1 14.1748 L29.1571 14.1748 L29.1571 15.2998 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x 0 0.55 1 0.3 (\245Laurel.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR2.0183 27.4787 m1.5899 25.4751 2.8132 21.8488 5.9125 18.7494 c9.0107 15.6513 12.654 14.3407 14.6395 14.8545 C14.6398 14.8547 L15.1246 16.8113 13.8478 20.4883 10.7496 23.5865 c7.6538 26.6824 3.9876 27.8936 2.0183 27.4787 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.39 0.7 0.12 (\245Laurel.color3) 0 x 0 0.39 0.7 0.12 (\245Laurel.color3) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR2.0183 2.0091 m1.5899 4.0126 2.8132 7.6389 5.9125 10.7382 c9.0107 13.8365 12.654 15.147 14.6395 14.6332 C14.6398 14.633 L15.1246 12.6765 13.8478 8.9993 10.7496 5.9011 c7.6538 2.8054 3.9876 1.5941 2.0183 2.0091 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x 0 0.55 1 0.3 (\245Laurel.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR15.821 2.0091 m15.3925 4.0126 16.6159 7.6389 19.7152 10.7382 c22.8134 13.8365 26.4567 15.147 28.4422 14.6332 C28.4424 14.633 L28.9273 12.6765 27.6505 8.9993 24.5523 5.9011 c21.4565 2.8054 17.7903 1.5941 15.821 2.0091 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.39 0.7 0.12 (\245Laurel.color3) 0 x 0 0.39 0.7 0.12 (\245Laurel.color3) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR15.821 27.4787 m15.3925 25.4751 16.6159 21.8488 19.7152 18.7494 c22.8134 15.6513 26.4567 14.3407 28.4422 14.8545 C28.4424 14.8547 L28.9273 16.8113 27.6505 20.4883 24.5523 23.5865 c21.4565 26.6824 17.7903 27.8936 15.821 27.4787 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Polka Dots)(Polka Dots) 3.88 3.88 32.68 32.68 [(0 O 0 R 0.45 0.9 0 0 (Violet) 0 x 0.45 0.9 0 0 (Violet) 0 X) @_ &(0 O 0 R 0.45 0.9 0 0 (Violet) 0.8 x 0.45 0.9 0 0 (Violet) 0.8 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR32.68 1 m34.27 1 35.56 2.29 35.56 3.88 c35.56 5.471 34.27 6.76 32.68 6.76 c31.089 6.76 29.8 5.471 29.8 3.88 c29.8 2.29 31.089 1 32.68 1 cf18.28 1 m19.87 1 21.16 2.29 21.16 3.88 c21.16 5.471 19.87 6.76 18.28 6.76 c16.689 6.76 15.4 5.471 15.4 3.88 c15.4 2.29 16.689 1 18.28 1 cf3.88 1 m5.47 1 6.76 2.29 6.76 3.88 c6.76 5.471 5.47 6.76 3.88 6.76 c2.29 6.76 1 5.471 1 3.88 c1 2.29 2.29 1 3.88 1 cf32.68 15.4 m34.27 15.4 35.56 16.69 35.56 18.28 c35.56 19.871 34.27 21.16 32.68 21.16 c31.089 21.16 29.8 19.871 29.8 18.28 c29.8 16.69 31.089 15.4 32.68 15.4 cf18.28 15.4 m19.87 15.4 21.16 16.69 21.16 18.28 c21.16 19.871 19.87 21.16 18.28 21.16 c16.689 21.16 15.4 19.871 15.4 18.28 c15.4 16.69 16.689 15.4 18.28 15.4 cf3.88 15.4 m5.47 15.4 6.76 16.69 6.76 18.28 c6.76 19.871 5.47 21.16 3.88 21.16 c2.29 21.16 1 19.871 1 18.28 c1 16.69 2.29 15.4 3.88 15.4 cf32.68 29.8 m34.27 29.8 35.56 31.09 35.56 32.68 c35.56 34.271 34.27 35.56 32.68 35.56 c31.089 35.56 29.8 34.271 29.8 32.68 c29.8 31.09 31.089 29.8 32.68 29.8 cf18.28 29.8 m19.87 29.8 21.16 31.09 21.16 32.68 c21.16 34.271 19.87 35.56 18.28 35.56 c16.689 35.56 15.4 34.271 15.4 32.68 c15.4 31.09 16.689 29.8 18.28 29.8 cf3.88 29.8 m5.47 29.8 6.76 31.09 6.76 32.68 c6.76 34.271 5.47 35.56 3.88 35.56 c2.29 35.56 1 34.271 1 32.68 c1 31.09 2.29 29.8 3.88 29.8 cf11.08 8.2 m12.67 8.2 13.96 9.49 13.96 11.08 c13.96 12.671 12.67 13.96 11.08 13.96 c9.489 13.96 8.2 12.671 8.2 11.08 c8.2 9.49 9.489 8.2 11.08 8.2 cf25.48 8.2 m27.07 8.2 28.36 9.49 28.36 11.08 c28.36 12.671 27.07 13.96 25.48 13.96 c23.889 13.96 22.6 12.671 22.6 11.08 c22.6 9.49 23.889 8.2 25.48 8.2 cf11.08 22.6 m12.67 22.6 13.96 23.89 13.96 25.48 c13.96 27.071 12.67 28.36 11.08 28.36 c9.489 28.36 8.2 27.071 8.2 25.48 c8.2 23.89 9.489 22.6 11.08 22.6 cf25.48 22.6 m27.07 22.6 28.36 23.89 28.36 25.48 c28.36 27.071 27.07 28.36 25.48 28.36 c23.889 28.36 22.6 27.071 22.6 25.48 c22.6 23.89 23.889 22.6 25.48 22.6 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Random O's)(Random O's) 4.365 3.849 51.13 57.85 [(0 O 0 R 0 0.25 1 0 (Orange Yellow) 0.55 x 0 0.25 1 0 (Orange Yellow) 0.55 X) @_ &(0 O 0 R 0.4 0.7 1 0 (Rusty Brown) 0 x 0.4 0.7 1 0 (Rusty Brown) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D0 XR45.429 36.274 m45.843 36.991 45.598 37.908 44.88 38.323 c44.163 38.737 43.245 38.491 42.831 37.774 c42.417 37.056 42.663 36.139 43.38 35.725 c44.098 35.31 45.015 35.556 45.429 36.274 cs44.179 27.926 m43.765 28.643 42.848 28.889 42.13 28.475 c41.413 28.06 41.167 27.143 41.581 26.425 c41.995 25.708 42.913 25.462 43.63 25.876 c44.348 26.291 44.593 27.208 44.179 27.926 cs35.929 41.024 m35.515 41.741 34.598 41.987 33.88 41.573 c33.163 41.158 32.917 40.241 33.331 39.524 c33.745 38.806 34.663 38.56 35.38 38.975 c36.098 39.389 36.343 40.306 35.929 41.024 cs28.38 34.225 m28.794 34.942 28.549 35.859 27.831 36.274 c27.114 36.688 26.196 36.442 25.782 35.725 c25.368 35.007 25.614 34.09 26.331 33.675 c27.049 33.261 27.966 33.507 28.38 34.225 cs31.179 28.024 m30.765 28.741 29.848 28.987 29.13 28.573 c28.413 28.158 28.167 27.241 28.581 26.524 c28.995 25.806 29.913 25.56 30.63 25.975 c31.348 26.389 31.593 27.306 31.179 28.024 cs36.792 23.349 m35.963 23.349 35.292 22.678 35.292 21.849 c35.292 21.021 35.963 20.349 36.792 20.349 c37.62 20.349 38.292 21.021 38.292 21.849 c38.292 22.678 37.62 23.349 36.792 23.349 cs10.888 34.175 m10.474 34.893 10.72 35.81 11.437 36.225 c12.155 36.639 13.072 36.393 13.486 35.675 c13.901 34.958 13.655 34.041 12.937 33.626 c12.22 33.212 11.303 33.458 10.888 34.175 cs11.517 26.601 m11.931 27.318 12.848 27.564 13.566 27.15 c14.283 26.735 14.529 25.818 14.115 25.1 c13.701 24.383 12.783 24.137 12.066 24.551 c11.348 24.966 11.103 25.883 11.517 26.601 cs16.782 41.426 m17.196 42.143 18.114 42.389 18.831 41.975 c19.549 41.56 19.794 40.643 19.38 39.926 c18.966 39.208 18.049 38.962 17.331 39.377 c16.614 39.791 16.368 40.708 16.782 41.426 cs22.365 24.35 m23.194 24.35 23.865 23.678 23.865 22.85 c23.865 22.021 23.194 21.35 22.365 21.35 c21.537 21.35 20.865 22.021 20.865 22.85 c20.865 23.678 21.537 24.35 22.365 24.35 cs45.385 7.849 m44.971 7.132 44.053 6.886 43.336 7.3 c42.619 7.714 42.373 8.632 42.787 9.349 c43.201 10.067 44.119 10.312 44.836 9.898 c45.553 9.484 45.799 8.567 45.385 7.849 cs29.679 7.774 m29.265 7.056 28.348 6.81 27.63 7.225 c26.913 7.639 26.667 8.556 27.081 9.274 c27.495 9.991 28.413 10.237 29.13 9.823 c29.848 9.408 30.093 8.491 29.679 7.774 cs35.542 11.349 m34.713 11.349 34.042 12.021 34.042 12.849 c34.042 13.678 34.713 14.349 35.542 14.349 c36.37 14.349 37.042 13.678 37.042 12.849 c37.042 12.021 36.37 11.349 35.542 11.349 cs10.13 7.475 m10.544 6.757 11.462 6.511 12.179 6.926 c12.897 7.34 13.142 8.257 12.728 8.975 c12.314 9.692 11.397 9.938 10.679 9.524 c9.962 9.109 9.716 8.192 10.13 7.475 cs20.203 13.349 m21.031 13.349 21.703 14.021 21.703 14.849 c21.703 15.678 21.031 16.349 20.203 16.349 c19.375 16.349 18.703 15.678 18.703 14.849 c18.703 14.021 19.375 13.349 20.203 13.349 cs44.635 54.1 m45.049 53.382 44.803 52.465 44.086 52.051 c43.369 51.636 42.451 51.882 42.037 52.6 c41.623 53.317 41.869 54.234 42.586 54.649 c43.303 55.063 44.221 54.817 44.635 54.1 cs36.841 48.1 m36.427 47.382 35.509 47.136 34.792 47.551 c34.074 47.965 33.828 48.882 34.243 49.6 c34.657 50.317 35.574 50.563 36.292 50.149 c37.009 49.734 37.255 48.817 36.841 48.1 cs29.728 54.725 m30.143 54.007 29.897 53.09 29.179 52.675 c28.462 52.261 27.544 52.507 27.13 53.225 c26.716 53.942 26.962 54.859 27.679 55.274 c28.397 55.688 29.314 55.442 29.728 54.725 cs10.86 54.1 m10.446 53.382 10.691 52.465 11.409 52.051 c12.126 51.636 13.044 51.882 13.458 52.6 c13.872 53.317 13.626 54.234 12.909 54.649 c12.191 55.063 11.274 54.817 10.86 54.1 cs19.154 49.1 m19.568 48.382 20.486 48.136 21.203 48.551 c21.92 48.965 22.166 49.882 21.752 50.6 c21.338 51.317 20.42 51.563 19.703 51.149 c18.986 50.734 18.74 49.817 19.154 49.1 cs51.88 38.85 m51.052 38.85 50.38 39.521 50.38 40.35 c50.38 41.178 51.052 41.85 51.88 41.85 c52.709 41.85 53.38 41.178 53.38 40.35 c53.38 39.521 52.709 38.85 51.88 38.85 cs51.865 11.349 m52.693 11.349 53.365 12.021 53.365 12.849 c53.365 13.678 52.693 14.349 51.865 14.349 c51.036 14.349 50.365 13.678 50.365 12.849 c50.365 12.021 51.036 11.349 51.865 11.349 cs30.179 18.524 m29.765 19.241 28.848 19.487 28.13 19.073 c27.413 18.658 27.167 17.741 27.581 17.024 c27.995 16.306 28.913 16.06 29.63 16.475 c30.348 16.889 30.593 17.806 30.179 18.524 cs21.679 31.524 m21.265 32.241 20.348 32.487 19.63 32.073 c18.913 31.658 18.667 30.741 19.081 30.024 c19.495 29.306 20.413 29.06 21.13 29.475 c21.848 29.889 22.093 30.806 21.679 31.524 cs37.914 33.399 m37.5 34.116 36.583 34.362 35.865 33.948 c35.148 33.533 34.902 32.616 35.316 31.899 c35.73 31.181 36.648 30.935 37.365 31.35 c38.083 31.764 38.328 32.681 37.914 33.399 cs28.929 45.024 m28.515 45.741 27.598 45.987 26.88 45.573 c26.163 45.158 25.917 44.241 26.331 43.524 c26.745 42.806 27.663 42.56 28.38 42.975 c29.098 43.389 29.343 44.306 28.929 45.024 cs12.429 45.524 m12.015 46.241 11.098 46.487 10.38 46.073 c9.663 45.658 9.417 44.741 9.831 44.024 c10.245 43.306 11.163 43.06 11.88 43.475 c12.598 43.889 12.843 44.806 12.429 45.524 cs44.49 45.6 m44.075 46.317 43.158 46.563 42.441 46.149 c41.723 45.734 41.477 44.817 41.891 44.1 c42.306 43.382 43.223 43.136 43.941 43.55 c44.658 43.965 44.904 44.882 44.49 45.6 cs12.679 18.524 m12.265 19.241 11.348 19.487 10.63 19.073 c9.913 18.658 9.667 17.741 10.081 17.024 c10.495 16.306 11.413 16.06 12.13 16.475 c12.848 16.889 13.093 17.806 12.679 18.524 cs21.179 5.774 m20.765 6.491 19.848 6.737 19.13 6.323 c18.413 5.908 18.167 4.991 18.581 4.274 c18.995 3.557 19.913 3.311 20.63 3.725 c21.348 4.139 21.593 5.056 21.179 5.774 cs38.929 5.274 m38.515 5.991 37.598 6.237 36.88 5.823 c36.163 5.408 35.917 4.491 36.331 3.774 c36.745 3.057 37.663 2.811 38.38 3.225 c39.098 3.639 39.343 4.556 38.929 5.274 cs43.865 18.1 m44.694 18.1 45.365 17.429 45.365 16.6 c45.365 15.772 44.694 15.1 43.865 15.1 c43.037 15.1 42.365 15.772 42.365 16.6 c42.365 17.429 43.037 18.1 43.865 18.1 cs51.13 4.6 m50.302 4.6 49.63 3.928 49.63 3.1 c49.63 2.272 50.302 1.6 51.13 1.6 c51.959 1.6 52.63 2.272 52.63 3.1 c52.63 3.928 51.959 4.6 51.13 4.6 cs52.163 31.649 m51.748 32.366 50.831 32.612 50.114 32.198 c49.396 31.783 49.15 30.866 49.565 30.149 c49.979 29.431 50.896 29.185 51.614 29.6 c52.331 30.014 52.577 30.931 52.163 31.649 cs51.85 51.35 m51.021 51.35 50.35 50.678 50.35 49.85 c50.35 49.021 51.021 48.35 51.85 48.35 c52.678 48.35 53.35 49.021 53.35 49.85 c53.35 50.678 52.678 51.35 51.85 51.35 cs49.85 23.1 m50.679 23.1 51.35 22.428 51.35 21.6 c51.35 20.771 50.679 20.1 49.85 20.1 c49.022 20.1 48.35 20.771 48.35 21.6 c48.35 22.428 49.022 23.1 49.85 23.1 cs5.13 38.85 m4.302 38.85 3.63 39.521 3.63 40.35 c3.63 41.178 4.302 41.85 5.13 41.85 c5.959 41.85 6.63 41.178 6.63 40.35 c6.63 39.521 5.959 38.85 5.13 38.85 cs5.115 11.349 m5.943 11.349 6.615 12.021 6.615 12.849 c6.615 13.678 5.943 14.349 5.115 14.349 c4.286 14.349 3.615 13.678 3.615 12.849 c3.615 12.021 4.286 11.349 5.115 11.349 cs4.38 4.6 m3.552 4.6 2.88 3.928 2.88 3.1 c2.88 2.272 3.552 1.6 4.38 1.6 c5.209 1.6 5.88 2.272 5.88 3.1 c5.88 3.928 5.209 4.6 4.38 4.6 cs5.413 31.649 m4.998 32.366 4.081 32.612 3.364 32.198 c2.646 31.783 2.4 30.866 2.815 30.149 c3.229 29.431 4.146 29.185 4.864 29.6 c5.581 30.014 5.827 30.931 5.413 31.649 cs5.1 51.35 m4.271 51.35 3.6 50.678 3.6 49.85 c3.6 49.021 4.271 48.35 5.1 48.35 c5.928 48.35 6.6 49.021 6.6 49.85 c6.6 50.678 5.928 51.35 5.1 51.35 cs3.1 23.1 m3.929 23.1 4.6 22.428 4.6 21.6 c4.6 20.771 3.929 20.1 3.1 20.1 c2.272 20.1 1.6 20.771 1.6 21.6 c1.6 22.428 2.272 23.1 3.1 23.1 cs21.194 59.775 m20.78 60.492 19.863 60.738 19.145 60.324 c18.428 59.909 18.182 58.992 18.596 58.275 c19.01 57.558 19.928 57.312 20.645 57.726 c21.363 58.14 21.608 59.057 21.194 59.775 cs38.944 59.275 m38.53 59.992 37.613 60.238 36.895 59.824 c36.178 59.409 35.932 58.492 36.346 57.775 c36.76 57.058 37.678 56.812 38.395 57.226 c39.113 57.64 39.358 58.557 38.944 59.275 cs51.145 58.601 m50.317 58.601 49.645 57.929 49.645 57.101 c49.645 56.273 50.317 55.601 51.145 55.601 c51.974 55.601 52.645 56.273 52.645 57.101 c52.645 57.929 51.974 58.601 51.145 58.601 cs4.395 58.601 m3.567 58.601 2.895 57.929 2.895 57.101 c2.895 56.273 3.567 55.601 4.395 55.601 c5.224 55.601 5.895 56.273 5.895 57.101 c5.895 57.929 5.224 58.601 4.395 58.601 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Rope.side)(Rope.side) 1 4.6 60.9998 33.3999 [%AI3_Tile(0 O 0 R 0 0 0 1 (\245Rope.color1) 0 x 0 0 0 1 (\245Rope.color1) 0 X) @(%AI6_BeginPatternLayer800 Ar1 J 1 j 0.6 w 4 M []0 d%AI3_Note:0 D0 XR24.9999 7 m15.6521 4.663 8.125 8.6981 1 14.1408 CS36.9999 7 m22.3477 3.337 12.168 15.3276 1 23.859 CS48.9999 7 m29.3464 2.0866 17.7386 25.3332 1 30.6213 CS1 30.9999 m24.9999 36.9999 36.9999 1 60.9998 7 CS13 30.9999 m32.6534 35.9133 44.2611 12.6667 60.9998 7.3786 CS24.9999 30.9999 m39.652 34.6629 49.8317 22.6722 60.9998 14.1408 CS36.9999 30.9999 m46.3476 33.3369 53.8749 29.3018 60.9998 23.859 CS48.9999 30.9999 m53.3464 32.0865 57.2978 31.7908 60.9998 30.6213 CS13 7 m8.6535 5.9134 4.7019 6.2091 1 7.3786 CS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stripes-transparent)(Stripes-transparent) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 0 0.9 1 0 (Saturn Red) 0 x 0 0.9 1 0 (Saturn Red) 0 X) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--2 Bn%AI5_BeginGradient: (Purple, Red & Yellow)(Purple, Red & Yellow) 0 3 Bd[0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29292827262524232221201F1E1D1C1B1A1A191817161514131211100F0F0E0D0C0B0A><CCCCCCCDCDCDCDCDCECECECECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D4D4D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFCFDFDFDFDFDFEFEFEFEFEFEFFFFFF>01 %_Br<E5E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E5E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF><0001020203040505060708090A0A0B0C0D0E0E0F1011121313141516171818191A1B1C1D1D1E1F2021222323242526272828292A2B2C2D2E2E2F30313233343435363738393A3A3B3C3D3E3F4040414243444546464748494A4B4C4C4D4E4F5051525353545556575859595A5B5C5D5E5F6060616263646566676768696A6B6C6D6E6E6F70717273747575767778797A7B7C7C7D7E7F80818283838485868788898A8A8B8C8D8E8F9091929293949596979899999A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC>01 %_Br[0 0.04 1 0 1 50 99 %_Bs0 1 0.8 0 1 49 60 %_Bs0.9 0.9 0 0 1 51 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Steel Bar)(Steel Bar) 0 3 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0 0 50 100 %_Bs1 0 50 70 %_Bs0 0 50 0 %_BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Brown-red)(Brown-red) 0 4 Bd[<D9D8D7D7D6D5D5D4D3D2D2D1D0D0CFCECECDCCCBCBCAC9C9C8C7C7C6C5C4C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B9B8B7B6B6B5B4B4B3B2B2B1B0AFAFAEADADACABABAAA9A8A8A7A6A6A5A4A4A3A2A1A1A09F9F9E9D9D9C9B9A9A99989897969695949393929191908F8F8E8D8C8C8B8A8A89888887868585848383828181807F7E7E7D7C7C7B7A7A79787777767575747373727170706F6E6E6D6C6C6B6A6969686767666565646362626160605F5E5E5D5C5B5B5A5959585757565554545352525150504F4E4D4D4C4B4B4A49494847464645444443424241403F3F3E3D3D3C3B3B3A39383837363635343433323131302F2F2E2D2D2C2B2A2A2928282726>1<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000101010202030303040404050506060607070708080909090A0A0A0B0B0B0C0C0D0D0D0E0E0E0F0F1010101111111212121313141414151515161617171718181819191A1A1A1B1B1B1C1C1C1D1D1E1E1E1F1F1F2020212121222222232324242425252526262627272828282929292A2A2B2B2B2C2C2C2D2D2E2E2E2F2F2F3030303131323232333333343435353536363637373738383939393A3A3A3B3B3C3C3C3D3D3D3E3E3F3F3F4040404141414242434343444444454546464647474748484949494A4A4A4B4B4B4C4C4D4D4D4E4E4E4F4F5050505151515252535353545454555555565657575758585859595A5A5A5B5B5B5C5C5D5D5D5E5E5E>1 %_Br<0001020303040506070808090A0B0C0D0E0E0F1011121313141516171818191A1B1C1D1D1E1F2021222223242526262728292A2B2B2C2D2E2F2F3031323333343536373838393A3B3C3C3D3E3F404041424344444546474748494A4B4B4C4D4E4F4F505152525354555656575859595A5B5C5C5D5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7D7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F9090919292939495959697979899999A9B9B9C9D9D9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B2B3B4B4B5B5B6B7B7B8B8B9BABABBBBBCBDBDBEBEBFBFC0C1C1C2C2C3C3C4C4C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0D1D1D1D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D8D9D9><B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFBFC0C0C0C1C1C1C2C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCDCECECECECFCFCFD0D0D0D0D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9DADADADADBDBDBDBDCDCDCDCDDDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEAEBEBEBEBECECECECEDEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFFFFFFFFFFFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9B9A9999989796959493929190908F8E8D8C8B8A8988878786858483828180807F7E7D7C7B7A7979787776757473727271706F6E6D6C6C6B6A6968676766656463626261605F5E5D5D5C5B5A5958585756555454535251504F4F4E4D4C4B4B4A494848474645444443424141403F3E3D3D3C3B3A3A393837373635343433323131302F2F2E2D2C2C2B2A2929282727262525242322222120201F1E1E1D1C1C1B1A1A191918171716151514131312121110100F0F0E0E0D0C0C0B0B0A0A09090808070606060505040403030202020101010000>0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4E4F505152535455565758595A5B5B5C5D5E5F60616263646566666768696A6B6C6D6E6F6F70717273747576777878797A7B7C7D7E7F7F80818283848586868788898A8B8C8D8D8E8F9091929393949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B7B8B9BABBBBBCBDBEBEBFC0C1C2C2C3C4C5C5C6C7C8C8C9CACBCBCCCDCECECFD0D0D1D2D3D3D4D5D6D6D7D8D8D9DADADBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2F3F3F4F4F5F5F6F6F7F7F8F9F9F9FAFAFBFBFCFCFDFDFDFEFEFEFFFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9B9A9999989796959493929190908F8E8D8C8B8A8988878786858483828180807F7E7D7C7B7A7979787776757473727271706F6E6D6C6C6B6A6968676766656463626261605F5E5D5D5C5B5A5958585756555454535251504F4F4E4D4C4B4B4A494848474645444443424141403F3E3D3D3C3B3A3A393837373635343433323131302F2F2E2D2C2C2B2A2929282727262525242322222120201F1E1E1D1C1C1B1A1A191918171716151514131312121110100F0F0E0E0D0C0C0B0B0A0A09090808070606060505040403030202020101010000>3 %_Br<B0B0B0AFAFAFAEAEADADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A3A3A2A2A1A0A09F9F9E9D9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888878685858483828281807F7F7E7D7C7C7B7A797878777675757473727171706F6E6D6C6C6B6A6968686766656463636261605F5E5D5D5C5B5A5958575756555453525150504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323231302F2E2D2C2B2A292827262524232221201F1F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D9D9D9D9D9D8D8D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D4D4D4D4D4D4D4D3D3D3D3D3D3D3D2D2D2D2D2D2D2D1D1D1D1D1D1D0D0D0D0D0D0D0CFCFCFCFCFCFCECECECECECECDCDCDCDCDCDCCCCCCCCCCCBCBCBCBCBCBCACACACACACAC9C9C9C9C9C8C8C8C8C8C8C7C7C7C7C7C6C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C3C3C3C3C3C2C2C2C2C2C1C1C1C1C1C0C0C0C0C0BFBFBFBFBFBEBEBEBEBEBDBDBDBDBDBCBCBCBCBCBBBBBBBBBBBABABABABAB9B9B9B9B9B8B8B8B8B7B7B7B7B7B6B6B6B6B6B5B5B5B5B4B4B4B4B4B3B3B3B3B2>101 %_Br[0.15 1 1 0.37 1 50 100 %_Bs0.85 1 0 0 (Purple) 0 3 50 71 %_Bs0 0.7 1 0 (Orange Red) 0 3 43 24 %_Bs0.69 0.85 1 0 1 58 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Green & Blue)(Green & Blue) 0 2 Bd[<99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152535354555656575859595A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br[1 0.75 0 0 1 50 100 %_Bs0.6 0 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink, Yellow, Green)(Pink, Yellow, Green) 0 3 Bd[<0000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202020203030303030303030303030303030303030303030304040404040404040404040404040404040404040505050505050505050505050505050505050506060606060606060606060606060606060606070707070707070707070707070707070707080808080808080808080808080808080809090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D><050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F101011111212131314141515161717181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F606162636364656666676869696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F8081828383848586878788898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8A9AAABACADADAEAFB0B1B2B2><CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A59585756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A19181817171616151414131312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202020201010101010000000000><00000000000000000000000001010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404050505050505050505050505050505050505050505050505050505050505050505050505050505050505><BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC>01 %_Br[0.05 0.7 0 0 1 50 100 %_Bs0 0.02 0.8 0 1 57 36 %_Bs0.45 0 0.75 0 1 37 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_Bs1 1 0 0 1 50 80 %_Bs1 0.0279 0 0 1 50 60 %_Bs1 0 1 0 1 50 40 %_Bs0 0 1 0 1 50 20 %_Bs0 1 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5>01 %_Br[0 0 1 0 1 52 19 %_Bs0 0.55 0.9 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Purple Radial)(Yellow & Purple Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_Bs1 1 0 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette27 53 PbPnPc1 gPc0 gPc0 0 0 0 kPc0.75 gPc0.5 gPc0.25 gPc0 gPcBb2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0 0 0 kPc0.5 0 0 0 kPc0.75 0 0 0 kPc1 0 0 0 kPc0.25 0.25 0 0 kPc0.5 0.5 0 0 kPc0.75 0.75 0 0 kPc1 1 0 0 kPcBb2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0 0 kPc0 0.5 0 0 kPc0 0.75 0 0 kPc0 1 0 0 kPc0 0.25 0.25 0 kPc0 0.5 0.5 0 kPc0 0.75 0.75 0 kPc0 1 1 0 kPcBb0 0 0 0 Bh2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0 0.25 0 kPc0 0 0.5 0 kPc0 0 0.75 0 kPc0 0 1 0 kPc0.25 0 0.25 0 kPc0.5 0 0.5 0 kPc0.75 0 0.75 0 kPc1 0 1 0 kPcBb2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0 0 kPc0.5 0.25 0 0 kPc0.75 0.375 0 0 kPc1 0.5 0 0 kPc0.125 0.25 0 0 kPc0.25 0.5 0 0 kPc0.375 0.75 0 0 kPc0.5 1 0 0 kPcBb2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0.125 0 kPc0 0.5 0.25 0 kPc0 0.75 0.375 0 kPc0 1 0.5 0 kPc0 0.125 0.25 0 kPc0 0.25 0.5 0 kPc0 0.375 0.75 0 kPc0 0.5 1 0 kPcBb2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0 0.25 0 kPc0.25 0 0.5 0 kPc0.375 0 0.75 0 kPc0.5 0 1 0 kPc0.25 0 0.125 0 kPc0.5 0 0.25 0 kPc0.75 0 0.375 0 kPc1 0 0.5 0 kPcBb2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0.125 0 kPc0.5 0.25 0.25 0 kPc0.75 0.375 0.375 0 kPc1 0.5 0.5 0 kPc0.25 0.25 0.125 0 kPc0.5 0.5 0.25 0 kPc0.75 0.75 0.375 0 kPc1 1 0.5 0 kPcBb0 0 0 0 Bh2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0.25 0.125 0 kPc0.25 0.5 0.25 0 kPc0.375 0.75 0.375 0 kPc0.5 1 0.5 0 kPc0.125 0.25 0.25 0 kPc0.25 0.5 0.5 0 kPc0.375 0.75 0.75 0 kPc0.5 1 1 0 kPc0 0 0 0 kPc0.125 0.125 0.25 0 kPc0.25 0.25 0.5 0 kPc0.375 0.375 0.75 0 kPc0.5 0.5 1 0 kPc0.25 0.125 0.25 0 kPc0.5 0.25 0.5 0 kPc0.75 0.375 0.75 0 kPc1 0.5 1 0 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 A0 To1 0 0 1 117.4803 541.2833 0 TpTP-6.5557 0 Td0 Tr0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR/_Times-Bold 11.8187 Tf0 Ts100 Tz0 Tt1 TA%_ 0 XL20.2606 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti1 Ta0 0 2 2 3 Th0 Tq0 0 Tl0 Tc0 Tw(\(c\)) Tx(\r) TX TOuu1 Ap0 0.125 0.25 0 k478.8473 589.8056 m478.8473 603.2889 L318.4507 603.2889 L318.4507 589.8056 L478.8473 589.8056 Lf0 0.25 0.5 0 k318.4745 557.3946 m318.4745 590.8639 L477.7917 590.8639 L477.7917 557.3946 L318.4745 557.3946 Lf478.5302 577.197 m479.1287 581.9146 474.6964 581.6823 474.6964 584.6705 c474.6964 587.6441 479.3332 590.1385 476.5023 590.5441 c456.7466 593.375 459.2411 600.8398 439.2835 600.8398 c419.3222 600.8398 419.3222 591.8351 399.3608 591.8351 c379.4324 591.8351 379.4324 600.8398 359.504 600.8398 c339.6927 600.8398 338.0663 593.8056 318.4745 590.8639 c315.5327 590.4222 324.3838 587.3997 324.3838 584.4115 c324.3838 581.4378 317.6892 577.607 320.5201 577.2013 c340.2758 574.3704 339.839 568.2421 359.7966 568.2421 c379.758 568.2421 379.758 577.2469 399.7194 577.2469 c419.6477 577.2469 419.769 567.7351 439.691 568.2436 c459.2919 568.7438 476.0368 557.5431 478.5302 577.197 cf0 0.375 0.75 0 k477.2619 555.733 m477.2619 572.4108 468.0261 582.8143 452.3153 582.8143 c438.7201 582.8143 438.7201 566.4948 425.125 566.4948 c411.5453 566.4948 411.5453 582.8143 397.9657 582.8143 c384.3346 582.8143 384.3346 566.4948 370.7035 566.4948 c357.2052 566.4948 357.2052 582.8143 343.7069 582.8143 c330.2129 582.8143 319.0043 566.5862 319.0043 564.0341 c319.0043 561.3636 319.0043 556.1743 319.0043 553.6556 c319.0043 551.2816 330.335 536.9527 343.9509 536.9527 c357.5461 536.9527 357.5461 553.2722 371.1413 553.2722 c384.7209 553.2722 384.7209 536.9527 398.3005 536.9527 c411.9316 536.9527 411.9316 553.2722 425.5627 553.2722 c439.061 553.2722 439.1559 535.1574 452.6448 536.9584 c466.1137 538.7568 477.2619 553.1808 477.2619 555.733 cf0 Ap0 R0 G350.7203 560.778 m351.2737 556.5187 343.3226 556.7174 338.2979 556.2347 C456.8196 556.6959 L451.795 557.1787 443.8438 556.9799 444.3972 561.2392 C445.7644 568.7213 457.5442 576.8561 460.1786 585.1776 c460.8444 587.4869 458.7812 589.9544 452.1659 590.3426 C439.2426 592.0271 425.783 593.2699 414.1105 591.2074 c410.5239 590.5102 406.0295 589.4187 405.5567 587.6336 c404.6456 584.5213 405.2101 580.8679 409.1883 577.8811 C416.7576 571.425 421.1526 562.846 416.1412 557.8583 C415.5379 556.1142 411.7539 557.4042 409.2019 557.6655 C385.9156 557.2043 L383.3636 556.943 379.5797 555.653 378.9762 557.397 C373.9649 562.3848 378.3599 570.9637 385.9292 577.4198 C389.9074 580.4067 390.4718 584.06 389.5608 587.1723 c389.088 588.9574 384.5936 590.049 381.007 590.7462 c369.3345 592.8087 355.8749 591.5659 342.9516 589.8814 C336.3362 589.4932 334.2731 587.0257 334.9389 584.7164 c337.5733 576.3949 349.3531 568.2601 350.7203 560.778 CBb1 (Steel Bar) 110 354 -88.0259 232.1379 0.5628 0 0 0.5628 1987.8932 1606.8305 Bg233.7841 -6785.6325 -128.6874 -4.4336 225.6891 7445.5157 Bc3.149 -91.3989 -128.6874 -4.4336 459.4732 659.8833 Bm1.3496 -39.1715 -128.6874 -4.4336 462.6222 568.4843 Bm233.7841 -6785.6325 -128.6874 -4.4336 463.9717 529.3128 Bcb2 BB317.0906 556.0744 m317.0906 539.7738 L477.4872 539.7738 L477.4872 556.0744 L317.0906 556.0744 LBb1 (Steel Bar) 12 184.5 90 114 0.5628 0 0 0.5628 2149.2747 1636.0255 Bg0 6789.6812 162.6474 0 315.9652 -6260.0583 Bc0 44.9116 162.6474 0 315.9652 529.6228 Bm0 19.2481 162.6474 0 315.9652 574.5345 Bm0 6789.6812 162.6474 0 315.9652 593.7826 Bcf0 BB1 Ap477.4872 536.7136 m477.4872 553.0143 L317.0906 553.0143 L317.0906 536.7136 L477.4872 536.7136 LBb1 (Purple, Red & Yellow) 285 615 90 28.5 0.5628 0 0 1.2075 1988.4559 -757.9994 Bg0 14567.3316 162.6461 0 315.9658 -14045.3072 Bc0 20.6485 162.6461 0 315.9658 522.0244 Bm0 13.4214 162.6461 0 315.9658 542.6729 Bm0 14567.3316 162.6461 0 315.9658 556.0943 Bcf0 BB0 R1 G12 w477.1864 534.3077 m477.1864 604.7117 L317.7198 604.7117 L317.7198 534.3077 L477.1864 534.3077 LsU0 To1 0 0 1 307.2417 540.5726 0 TpTP-7.2179 0 Td0 Tr0 O0 g1 w17.4467 0 Tl(\(d\)) Tx(\r) TX TOUuuu286.2033 619.339 m286.2033 635.6396 L125.8066 635.6396 L125.8066 619.339 L286.2033 619.339 LBb1 (Purple, Red & Yellow) 285 615 90 28.5 0.5628 0 0 1.2075 1797.172 -840.6247 Bg0 14567.3316 162.6462 0 124.6818 -13962.6819 Bc0 20.6485 162.6462 0 124.6818 604.6497 Bm0 13.4214 162.6462 0 124.6818 625.2982 Bm0 14567.3316 162.6462 0 124.6818 638.7196 Bcf0 BB286.2033 636.5042 m286.2033 652.8049 L125.8066 652.8049 L125.8066 636.5042 L286.2033 636.5042 LBb1 (Steel Bar) 337.5 475.5 92.0265 169.6062 0.5628 0 0 0.5628 1791.6847 1754.318 Bg-240.0424 6785.4472 163.0216 5.7671 367.0024 -6213.8701 Bc-2.3623 66.7767 163.0216 5.7671 126.9599 571.5771 Bm-1.0124 28.619 163.0216 5.7671 124.5976 638.3538 Bm-240.0424 6785.4472 163.0216 5.7671 123.5852 666.9729 Bcf0 BBU0 R1 G12 w289.0172 616.8856 m289.0172 683.6794 L128.6206 683.6794 L128.6206 616.8856 L289.0172 616.8856 LsU0 To1 0 0 1 117.8122 623.8311 0 TpTP-6.8875 0 Td0 Tr0 O0 g1 w0 0 Tl(\(a\)) Tx(\r) TX TOUuu477.1864 619.8465 m477.1864 636.1471 L316.7897 636.1471 L316.7897 619.8465 L477.1864 619.8465 LBb1 (Purple, Red & Yellow) 285 615 90 28.5 0.5628 0 0 1.2075 1988.1551 -841.1322 Bg0 14567.3316 162.6462 0 315.6649 -13962.1744 Bc0 20.6485 162.6462 0 315.6649 605.1572 Bm0 13.4214 162.6462 0 315.6649 625.8057 Bm0 14567.3316 162.6462 0 315.6649 639.2271 Bcf0 BB0 R0 G477.1864 637.0117 m477.1864 653.3124 L316.7897 653.3124 L316.7897 637.0117 L477.1864 637.0117 LBb1 (Steel Bar) 337.5 475.5 92.0265 169.6062 0.5628 0 0 0.5628 1982.6678 1753.8105 Bg-240.0424 6785.4472 163.0216 5.7671 557.9853 -6213.3626 Bc-2.3623 66.7767 163.0216 5.7671 317.9428 572.0846 Bm-1.0124 28.619 163.0216 5.7671 315.5805 638.8613 Bm-240.0424 6785.4472 163.0216 5.7671 314.5681 667.4803 Bcb2 BB0 0.25 0.5 0 k477.1864 661.8751 m477.1864 670.0254 L316.7897 670.0254 L316.7897 661.8751 L477.1864 661.8751 Lf0 0.125 0.25 0 k477.1864 670.317 m477.1864 678.4674 L316.7897 678.4674 L316.7897 670.317 L477.1864 670.317 Lf0 0.375 0.75 0 k477.1864 654.1015 m477.1864 662.2518 L316.7897 662.2518 L316.7897 654.1015 L477.1864 654.1015 Lf0 R1 G12 w477.1864 616.8856 m477.1864 683.6794 L316.7897 683.6794 L316.7897 616.8856 L477.1864 616.8856 LsU0 To1 0 0 1 306.3117 623.3537 0 TpTP-7.2179 0 Td0 Tr0 O0 g1 w(\(b\)) Tx(\r) TX TOUuuuuu0 Ap1 XR132.1605 371.3111 m477.7306 371.3111 L477.7306 377.128 L362.2383 377.128 247.5208 377.128 132.1605 377.128 C132.1605 371.3111 LBb1 (Purple, Red & Yellow) -263.0469 180.0681 89.2044 147.9285 1.2168 0 0 0.9695 -246.4744 -49.0314 Bg203.7786 11694.9144 350.4685 -3.8767 -74.2539 -11325.5321 Bc1.4992 86.0425 350.4685 -3.8767 129.5247 369.3823 Bm0.9745 55.927 350.4685 -3.8767 131.0239 455.4248 Bm203.7786 11694.9144 350.4685 -3.8767 131.9984 511.3518 Bcf0 BB132.1605 507.0394 m132.1605 377.128 L247.5208 377.128 362.2383 377.128 477.7306 377.128 C477.7306 507.0394 L132.1605 507.0394 LBb1 (Purple, Red & Yellow) -263.0469 180.0681 89.2044 147.9285 1.2168 0 0 0.9695 -246.4744 -49.0314 Bg203.7786 11694.9144 352.6295 -3.9006 -76.5162 -11325.5071 Bc1.4992 86.0425 352.6295 -3.9006 127.2624 369.4073 Bm0.9745 55.927 352.6295 -3.9006 128.7616 455.4499 Bm203.7786 11694.9144 352.6295 -3.9006 129.7361 511.3769 Bcf0 BB476.5899 433.5774 m476.5899 436.0049 475.3731 437.2186 475.3731 439.646 C449.8204 428.7225 420.6173 422.6539 392.6309 425.0814 C385.3302 426.2951 378.0294 426.2951 370.7286 427.5088 c329.3575 434.7912 292.8536 448.1421 251.4826 452.997 C235.6642 454.2107 218.6291 454.2107 202.8107 454.2107 C190.6428 452.997 179.6916 451.7833 167.5236 449.3558 C155.3557 448.1421 144.4045 445.7147 132.2365 442.0735 C134.4434 418.9593 133.8968 395.5955 132.8686 372.2085 C247.3545 372.2085 361.2102 372.2085 475.8212 372.2085 C476.7896 392.755 477.5597 413.2627 476.5899 433.5774 CBb1 (Steel Bar) 221 268 91.6515 104.0433 1.2794 0 0 1.6106 -1197.8818 -2759.0856 Bg-444.7429 19422.1274 350.4613 12.7202 576.5767 -19113.6776 Bc-2.6849 117.2508 350.4613 12.7202 131.8338 308.4497 Bm-1.1507 50.2511 350.4613 12.7202 129.1489 425.7005 Bm-444.7429 19422.1274 350.4613 12.7202 127.9982 475.9516 Bcf0 BBU1 Ap0 R1 G10 w0 XR475.4512 507.0394 m475.4512 372.2759 L128.1072 372.2759 L128.1072 507.0394 L475.4512 507.0394 Ls0 Ap0 G3 w499.8056 503.5016 m132.7165 503.5016 l132.7165 353.4768 lS132.9865 377.422 m501.7039 377.422 lSU0 O0 g137.2489 358.3291 m132.5918 345.1486 L127.9347 358.3291 L137.2489 358.3291 LfU0 R0 G[7 10 ]0 d498.3532 439.351 m133.011 439.351 lSu2 w []0 d480.4694 493.9023 m480.4694 449.4099 lS0 O0 g1 w480.4694 450.3582 m484.5337 452.3944 l484.626 452.2803 l481.9935 446.8184 l481.4854 444.9154 480.9774 443.0123 480.4694 441.1092 c479.9613 443.0123 479.4533 444.9154 478.9452 446.8184 c476.3127 452.2803 l476.382 452.3944 l480.4694 450.3582 lf480.4694 492.954 m476.4051 490.9177 l476.3128 491.0319 l478.9453 496.4937 l479.4534 498.3968 479.9614 500.2998 480.4694 502.2029 c480.9775 500.2998 481.4855 498.3968 481.9936 496.4937 c484.6261 491.0319 l484.5568 490.9177 l480.4694 492.954 lfUu0 R0 G2 w480.4694 429.6523 m480.4694 386.8931 lS0 O0 g1 w480.4694 387.8045 m484.5337 389.7614 l484.626 389.6517 l481.9935 384.4027 l481.4854 382.5737 480.9774 380.7448 480.4694 378.9158 c479.9613 380.7448 479.4533 382.5737 478.9452 384.4027 c476.3127 389.6517 l476.382 389.7614 l480.4694 387.8045 lf480.4694 428.741 m476.4051 426.784 l476.3128 426.8937 l478.9453 432.1428 l479.4534 433.9717 479.9614 435.8007 480.4694 437.6296 c480.9775 435.8007 481.4855 433.9717 481.9936 432.1428 c484.6261 426.8937 l484.5568 426.784 l480.4694 428.741 lfUu3 w104.729 434.0429 m91.4259 438.657 L104.729 443.2712 L104.729 434.0429 Lf0 R0 G135.1932 439.351 m100.9962 439.351 lSUU0 To1 0 0 1 489.5494 405.0013 0 TpTP-4.8182 0 Td0 Tr0 O0 g1 w/_Times-Bold 17.1748 Tf100.9293 Tz29.7164 0 XbXB25.3533 0 Tl(b) Tx(\r) TX TO0 To1 0 0 1 490.3749 463.8865 0 TpTP-4.8182 0 Td0 Tr(b) Tx(\r) TX TO0 To1 0 0 1 342.6184 475.3364 0 TpTP-15.0371 0 Td0 Tr/_Symbol 17.1748 Tf(r) Tx/_Times-Bold 11.4499 Tf-4.9071 Ts(1) Tx/_Times-Bold 17.1748 Tf0 Ts(,) Tx/_Symbol 17.1748 Tf(h) Tx(\r) TX TO0 To1 0 0 1 342.6184 398.4585 0 TpTP-15.0371 0 Td0 Tr(r) Tx/_Times-Bold 11.4499 Tf-4.9071 Ts(2) Tx/_Times-Bold 17.1748 Tf0 Ts(,) Tx/_Symbol 17.1748 Tf(h) Tx(\r) TX TOu410.7004 437.6905 m410.7004 427.4816 lF410.7004 427.9676 m412.3582 429.011 l412.3958 428.9525 l411.3221 426.1537 l411.1148 425.1784 410.9076 424.2033 410.7004 423.228 c410.4932 424.2033 410.286 425.1784 410.0787 426.1537 c409.005 428.9525 l409.0332 429.011 l410.7004 427.9676 lfU0 To1 0 0 1 417.7348 418.9048 0 TpTP-6.257 0 Td0 Tr/_Times-Bold 17.1748 Tf-4.9071 Ts(w) Tx(\r) TX TO0 To1 0 0 1 121.3966 334.6662 0 TpTP-4.3336 0 Td0 Tr(y) Tx(\r) TX TO0 To1 0 0 1 92.5057 419.7226 0 TpTP-4.3336 0 Td0 Tr(x) Tx(\r) TX TO0 To1 0 0 1 502.7567 378.0123 0 TpTP0 Tr0 Ta(y=b) Tx(\r) TX TO0 To1 0 0 1 502.7567 438.5332 0 TpTP0 Tr(y=0) Tx(\r) TX TO0 To1 0 0 1 502.7567 503.1433 0 TpTP0 Tr(y=-b) Tx(\r) TX TOUu0 0.375 0.75 0 k1 XR246.313 586.8332 m224.9796 586.8332 224.9797 576.6905 203.6463 576.6905 c182.4729 576.6905 182.4729 586.8332 161.2994 586.8332 c143.8222 586.8332 140.9228 580.7796 128.5224 577.9614 C128.5224 573.6121 128.5224 569.2628 128.5224 564.9135 C140.8774 567.0172 144.2007 574.5928 161.6855 574.5928 c183.0062 574.5928 183.0062 564.4501 204.3269 564.4501 c225.6603 564.4501 225.6603 574.5928 246.9936 574.5928 c267.422 574.5928 268.3949 563.9818 287.427 564.3732 C287.427 568.4866 287.427 572.6001 287.427 576.7135 C267.6307 577.1889 267.1085 586.8332 246.313 586.8332 cf0 0.25 0.5 0 k247.0668 590.3804 m225.314 590.3804 225.314 584.0549 203.5612 584.0549 c181.9715 584.0549 181.9715 590.3804 160.3817 590.3804 c142.5609 590.3804 139.6044 586.6051 126.9603 584.8475 C126.9603 582.1351 126.9603 579.4226 126.9603 576.7102 C139.5582 578.0222 142.9468 582.7467 160.7754 582.7467 c182.5153 582.7467 182.5153 576.4212 204.2552 576.4212 c226.008 576.4212 226.008 582.7467 247.7607 582.7467 c268.5908 582.7467 269.5828 576.1291 288.9892 576.3733 C288.9892 578.9386 288.9892 581.5039 288.9892 584.0693 C268.8037 584.3657 268.2711 590.3804 247.0668 590.3804 cf0 0.125 0.25 0 k246.5685 599.2141 m225.093 599.2141 225.093 592.0265 203.6175 592.0265 c182.3029 592.0265 182.3029 599.2141 160.9882 599.2141 c143.3946 599.2141 140.4757 594.9242 127.9928 592.9271 C127.9928 589.845 127.9928 586.7628 127.9928 583.6807 C140.4301 585.1715 143.7756 590.5399 161.3769 590.5399 c182.8398 590.5399 182.8398 583.3523 204.3026 583.3523 c225.7782 583.3523 225.7782 590.5399 247.2537 590.5399 c267.8183 590.5399 268.7976 583.0204 287.9567 583.2978 C287.9567 586.2128 287.9567 589.1278 287.9567 592.0428 C268.0284 592.3796 267.5027 599.2141 246.5685 599.2141 cf0 R0 G0 XR246.5685 574.1413 m225.093 574.1413 225.093 567.3877 203.6175 567.3877 c182.3029 567.3877 182.3029 574.1413 160.9882 574.1413 c143.3067 574.1413 140.5492 570.6576 127.9928 568.5121 C127.9928 562.7219 127.9928 556.9318 127.9928 551.1417 C140.28 552.3441 143.8809 557.8406 161.3769 557.8406 c182.8398 557.8406 182.8398 551.0871 204.3026 551.0871 c225.7782 551.0871 225.7782 557.8406 247.2537 557.8406 c267.848 557.8406 268.7081 551.0156 287.9567 551.0603 C287.9567 556.5078 287.9567 561.9554 287.9567 567.403 C268.0284 567.7196 267.5027 574.1413 246.5685 574.1413 cBb1 (Steel Bar) 337.5 475.5 92.0265 169.6062 0.751 0 0 0.5628 999.0398 1836.3583 Bg-320.3029 6785.4472 163.5328 4.3354 449.6734 -6295.6596 Bc-3.1522 66.7767 163.5328 4.3354 129.3705 489.7875 Bm-1.3509 28.619 163.5328 4.3354 126.2183 556.5643 Bm-320.3029 6785.4472 163.5328 4.3354 124.8674 585.1833 Bcb2 BB248.3437 568.5628 m226.8683 568.5628 226.8683 561.8092 205.3927 561.8092 c184.0782 561.8092 184.0782 568.5628 162.7635 568.5628 c145.082 568.5628 142.3244 565.0791 129.768 562.9337 C129.768 557.1434 129.768 551.3533 129.768 545.5632 C142.0552 546.7657 145.6562 552.2622 163.1522 552.2622 c184.615 552.2622 184.615 545.5086 206.0778 545.5086 c227.5534 545.5086 227.5534 552.2622 249.0289 552.2622 c269.6233 552.2622 270.4833 545.4371 289.7319 545.4819 C289.7319 550.9293 289.7319 556.3769 289.7319 561.8246 C269.8036 562.1412 269.2779 568.5628 248.3437 568.5628 cBb1 (Steel Bar) 337.5 475.5 92.0265 169.6062 0.751 0 0 0.5628 1000.815 1841.9367 Bg-320.3029 6785.4472 163.5328 4.3354 451.4485 -6301.2381 Bc-3.1522 66.7767 163.5328 4.3354 131.1455 484.2091 Bm-1.3509 28.619 163.5328 4.3354 127.9934 550.9858 Bm-320.3029 6785.4472 163.5328 4.3354 126.6424 579.6048 Bcf0 BB1 Ap288.5951 538.4443 m288.5951 554.745 L128.1985 554.745 L128.1985 538.4443 L288.5951 538.4443 LBb1 (Purple, Red & Yellow) 285 615 90 28.5 0.5628 0 0 1.2075 1799.5639 -759.7301 Bg0 14567.3316 162.6461 0 127.0737 -14043.5765 Bc0 20.6485 162.6461 0 127.0737 523.7551 Bm0 13.4214 162.6461 0 127.0737 544.4036 Bm0 14567.3316 162.6461 0 127.0737 557.825 Bcf0 BB0 R1 G12 w289.0172 534.3077 m289.0172 600.5988 L128.6206 600.5988 L128.6206 534.3077 L289.0172 534.3077 LsULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_blend_AI5 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_screens_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF